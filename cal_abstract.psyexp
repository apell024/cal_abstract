<?xml version="1.0" ?>
<PsychoPy2experiment encoding="utf-8" version="2020.2.4">
  <Settings>
    <Param name="Audio latency priority" updates="None" val="use prefs" valType="str"/>
    <Param name="Audio lib" updates="None" val="use prefs" valType="str"/>
    <Param name="Completed URL" updates="None" val="" valType="str"/>
    <Param name="Data file delimiter" updates="None" val="auto" valType="str"/>
    <Param name="Data filename" updates="None" val="u'data/%s_%s_%s' % (expInfo['participant'], expName, expInfo['date'])" valType="code"/>
    <Param name="Enable Escape" updates="None" val="True" valType="bool"/>
    <Param name="Experiment info" updates="None" val="{'participant':'', 'session':'001'}" valType="code"/>
    <Param name="Force stereo" updates="None" val="True" valType="bool"/>
    <Param name="Full-screen window" updates="None" val="True" valType="bool"/>
    <Param name="HTML path" updates="None" val="" valType="str"/>
    <Param name="Incomplete URL" updates="None" val="" valType="str"/>
    <Param name="Monitor" updates="None" val="testMonitor" valType="str"/>
    <Param name="Resources" updates="None" val="[]" valType="fileList"/>
    <Param name="Save csv file" updates="None" val="False" valType="bool"/>
    <Param name="Save excel file" updates="None" val="False" valType="bool"/>
    <Param name="Save log file" updates="None" val="True" valType="bool"/>
    <Param name="Save psydat file" updates="None" val="True" valType="bool"/>
    <Param name="Save wide csv file" updates="None" val="True" valType="bool"/>
    <Param name="Screen" updates="None" val="1" valType="num"/>
    <Param name="Show info dlg" updates="None" val="True" valType="bool"/>
    <Param name="Show mouse" updates="None" val="False" valType="bool"/>
    <Param name="Units" updates="None" val="height" valType="str"/>
    <Param name="Use version" updates="None" val="" valType="str"/>
    <Param name="Window size (pixels)" updates="None" val="(1024, 768)" valType="code"/>
    <Param name="blendMode" updates="None" val="avg" valType="str"/>
    <Param name="color" updates="None" val="$[0,0,0]" valType="str"/>
    <Param name="colorSpace" updates="None" val="rgb" valType="str"/>
    <Param name="expName" updates="None" val="cal_abstract" valType="str"/>
    <Param name="exportHTML" updates="None" val="on Sync" valType="str"/>
    <Param name="logging level" updates="None" val="exp" valType="code"/>
  </Settings>
  <Routines>
    <Routine name="End">
      <TextComponent name="end_text1">
        <Param name="color" updates="constant" val="white" valType="str"/>
        <Param name="colorSpace" updates="constant" val="rgb" valType="str"/>
        <Param name="disabled" updates="None" val="False" valType="bool"/>
        <Param name="durationEstim" updates="None" val="" valType="code"/>
        <Param name="flip" updates="constant" val="" valType="str"/>
        <Param name="font" updates="constant" val="Arial" valType="str"/>
        <Param name="languageStyle" updates="None" val="LTR" valType="str"/>
        <Param name="letterHeight" updates="constant" val="0.05" valType="code"/>
        <Param name="name" updates="None" val="end_text1" valType="code"/>
        <Param name="opacity" updates="constant" val="1" valType="code"/>
        <Param name="ori" updates="constant" val="0" valType="code"/>
        <Param name="pos" updates="constant" val="(0, 0)" valType="code"/>
        <Param name="saveStartStop" updates="None" val="True" valType="bool"/>
        <Param name="startEstim" updates="None" val="" valType="code"/>
        <Param name="startType" updates="None" val="time (s)" valType="str"/>
        <Param name="startVal" updates="None" val="0.0" valType="code"/>
        <Param name="stopType" updates="None" val="duration (s)" valType="str"/>
        <Param name="stopVal" updates="constant" val="" valType="code"/>
        <Param name="syncScreenRefresh" updates="None" val="True" valType="bool"/>
        <Param name="text" updates="constant" val="You have finished the experiment!" valType="extendedStr"/>
        <Param name="units" updates="None" val="from exp settings" valType="str"/>
        <Param name="wrapWidth" updates="constant" val="" valType="code"/>
      </TextComponent>
      <TextComponent name="end_text2">
        <Param name="color" updates="constant" val="white" valType="str"/>
        <Param name="colorSpace" updates="constant" val="rgb" valType="str"/>
        <Param name="disabled" updates="None" val="False" valType="bool"/>
        <Param name="durationEstim" updates="None" val="" valType="code"/>
        <Param name="flip" updates="constant" val="" valType="str"/>
        <Param name="font" updates="constant" val="Arial" valType="str"/>
        <Param name="languageStyle" updates="None" val="LTR" valType="str"/>
        <Param name="letterHeight" updates="constant" val="0.03" valType="code"/>
        <Param name="name" updates="None" val="end_text2" valType="code"/>
        <Param name="opacity" updates="constant" val="1" valType="code"/>
        <Param name="ori" updates="constant" val="0" valType="code"/>
        <Param name="pos" updates="constant" val="(0, -0.35)" valType="code"/>
        <Param name="saveStartStop" updates="None" val="True" valType="bool"/>
        <Param name="startEstim" updates="None" val="" valType="code"/>
        <Param name="startType" updates="None" val="time (s)" valType="str"/>
        <Param name="startVal" updates="None" val="0.0" valType="code"/>
        <Param name="stopType" updates="None" val="duration (s)" valType="str"/>
        <Param name="stopVal" updates="constant" val="" valType="code"/>
        <Param name="syncScreenRefresh" updates="None" val="True" valType="bool"/>
        <Param name="text" updates="constant" val="Press “e” to exit." valType="extendedStr"/>
        <Param name="units" updates="None" val="from exp settings" valType="str"/>
        <Param name="wrapWidth" updates="constant" val="" valType="code"/>
      </TextComponent>
      <KeyboardComponent name="end_resp">
        <Param name="allowedKeys" updates="constant" val="'e'" valType="code"/>
        <Param name="correctAns" updates="constant" val="" valType="str"/>
        <Param name="disabled" updates="None" val="False" valType="bool"/>
        <Param name="discard previous" updates="constant" val="True" valType="bool"/>
        <Param name="durationEstim" updates="None" val="" valType="code"/>
        <Param name="forceEndRoutine" updates="constant" val="True" valType="bool"/>
        <Param name="name" updates="None" val="end_resp" valType="code"/>
        <Param name="saveStartStop" updates="None" val="True" valType="bool"/>
        <Param name="startEstim" updates="None" val="" valType="code"/>
        <Param name="startType" updates="None" val="time (s)" valType="str"/>
        <Param name="startVal" updates="None" val="0.0" valType="code"/>
        <Param name="stopType" updates="None" val="duration (s)" valType="str"/>
        <Param name="stopVal" updates="constant" val="" valType="code"/>
        <Param name="store" updates="constant" val="last key" valType="str"/>
        <Param name="storeCorrect" updates="constant" val="False" valType="bool"/>
        <Param name="syncScreenRefresh" updates="constant" val="True" valType="bool"/>
      </KeyboardComponent>
    </Routine>
    <Routine name="Block1">
      <ImageComponent name="image1">
        <Param name="color" updates="constant" val="$[1,1,1]" valType="str"/>
        <Param name="colorSpace" updates="constant" val="rgb" valType="str"/>
        <Param name="disabled" updates="None" val="False" valType="bool"/>
        <Param name="durationEstim" updates="None" val="" valType="code"/>
        <Param name="flipHoriz" updates="constant" val="False" valType="bool"/>
        <Param name="flipVert" updates="constant" val="False" valType="bool"/>
        <Param name="image" updates="set every repeat" val="$Block1Stim" valType="str"/>
        <Param name="interpolate" updates="constant" val="linear" valType="str"/>
        <Param name="mask" updates="constant" val="None" valType="str"/>
        <Param name="name" updates="None" val="image1" valType="code"/>
        <Param name="opacity" updates="constant" val="1" valType="code"/>
        <Param name="ori" updates="constant" val="0" valType="code"/>
        <Param name="pos" updates="constant" val="(0, 0)" valType="code"/>
        <Param name="saveStartStop" updates="None" val="True" valType="bool"/>
        <Param name="size" updates="constant" val="" valType="code"/>
        <Param name="startEstim" updates="None" val="" valType="code"/>
        <Param name="startType" updates="None" val="time (s)" valType="str"/>
        <Param name="startVal" updates="None" val="0.0" valType="code"/>
        <Param name="stopType" updates="None" val="duration (s)" valType="str"/>
        <Param name="stopVal" updates="constant" val="" valType="code"/>
        <Param name="syncScreenRefresh" updates="None" val="True" valType="bool"/>
        <Param name="texture resolution" updates="constant" val="512" valType="code"/>
        <Param name="units" updates="None" val="from exp settings" valType="str"/>
      </ImageComponent>
      <TextComponent name="text1">
        <Param name="color" updates="constant" val="white" valType="str"/>
        <Param name="colorSpace" updates="constant" val="rgb" valType="str"/>
        <Param name="disabled" updates="None" val="False" valType="bool"/>
        <Param name="durationEstim" updates="None" val="" valType="code"/>
        <Param name="flip" updates="constant" val="" valType="str"/>
        <Param name="font" updates="constant" val="Arial" valType="str"/>
        <Param name="languageStyle" updates="None" val="LTR" valType="str"/>
        <Param name="letterHeight" updates="constant" val="0.03" valType="code"/>
        <Param name="name" updates="None" val="text1" valType="code"/>
        <Param name="opacity" updates="constant" val="1" valType="code"/>
        <Param name="ori" updates="constant" val="0" valType="code"/>
        <Param name="pos" updates="constant" val="(0, -0.35)" valType="code"/>
        <Param name="saveStartStop" updates="None" val="True" valType="bool"/>
        <Param name="startEstim" updates="None" val="" valType="code"/>
        <Param name="startType" updates="None" val="time (s)" valType="str"/>
        <Param name="startVal" updates="None" val="0.0" valType="code"/>
        <Param name="stopType" updates="None" val="duration (s)" valType="str"/>
        <Param name="stopVal" updates="constant" val="" valType="code"/>
        <Param name="syncScreenRefresh" updates="None" val="True" valType="bool"/>
        <Param name="text" updates="constant" val="&lt;-  or  -&gt;" valType="extendedStr"/>
        <Param name="units" updates="None" val="from exp settings" valType="str"/>
        <Param name="wrapWidth" updates="constant" val="" valType="code"/>
      </TextComponent>
      <KeyboardComponent name="key_resp1">
        <Param name="allowedKeys" updates="constant" val="'left','right'" valType="code"/>
        <Param name="correctAns" updates="constant" val="$Block1Corr" valType="str"/>
        <Param name="disabled" updates="None" val="False" valType="bool"/>
        <Param name="discard previous" updates="constant" val="True" valType="bool"/>
        <Param name="durationEstim" updates="None" val="" valType="code"/>
        <Param name="forceEndRoutine" updates="constant" val="True" valType="bool"/>
        <Param name="name" updates="None" val="key_resp1" valType="code"/>
        <Param name="saveStartStop" updates="None" val="True" valType="bool"/>
        <Param name="startEstim" updates="None" val="" valType="code"/>
        <Param name="startType" updates="None" val="time (s)" valType="str"/>
        <Param name="startVal" updates="None" val="0.0" valType="code"/>
        <Param name="stopType" updates="None" val="time (s)" valType="str"/>
        <Param name="stopVal" updates="constant" val="" valType="code"/>
        <Param name="store" updates="constant" val="last key" valType="str"/>
        <Param name="storeCorrect" updates="constant" val="True" valType="bool"/>
        <Param name="syncScreenRefresh" updates="constant" val="True" valType="bool"/>
      </KeyboardComponent>
    </Routine>
    <Routine name="Feedback1">
      <CodeComponent name="code1">
        <Param name="Before Experiment" updates="constant" val="" valType="extendedCode"/>
        <Param name="Before JS Experiment" updates="constant" val="" valType="extendedCode"/>
        <Param name="Begin Experiment" updates="constant" val="" valType="extendedCode"/>
        <Param name="Begin JS Experiment" updates="constant" val="" valType="extendedCode"/>
        <Param name="Begin JS Routine" updates="constant" val="if ((key_resp1.keys === Block1Corr)) {&amp;#10;    trialFeedback1 = &quot;Correct!&quot;;&amp;#10;    trialBinary1 = 1;&amp;#10;} else {&amp;#10;    trialFeedback1 = &quot;Incorrect&quot;;&amp;#10;    trialBinary1 = 0;&amp;#10;}&amp;#10;Block1_loop.addData(&quot;trialCorrect&quot;, trialBinary1);&amp;#10;" valType="extendedCode"/>
        <Param name="Begin Routine" updates="constant" val="if key_resp1.keys == Block1Corr:&amp;#10;    trialFeedback1 = 'Correct!'&amp;#10;    trialBinary1 = 1&amp;#10;else:&amp;#10;    trialFeedback1 = 'Incorrect'&amp;#10;    trialBinary1 = 0&amp;#10;&amp;#10;Block1_loop.addData('trialCorrect', trialBinary1)" valType="extendedCode"/>
        <Param name="Code Type" updates="None" val="Auto-&gt;JS" valType="str"/>
        <Param name="Each Frame" updates="constant" val="" valType="extendedCode"/>
        <Param name="Each JS Frame" updates="constant" val="" valType="extendedCode"/>
        <Param name="End Experiment" updates="constant" val="" valType="extendedCode"/>
        <Param name="End JS Experiment" updates="constant" val="" valType="extendedCode"/>
        <Param name="End JS Routine" updates="constant" val="" valType="extendedCode"/>
        <Param name="End Routine" updates="constant" val="" valType="extendedCode"/>
        <Param name="disabled" updates="None" val="False" valType="bool"/>
        <Param name="name" updates="None" val="code1" valType="code"/>
      </CodeComponent>
      <TextComponent name="feedback_text1">
        <Param name="color" updates="constant" val="white" valType="str"/>
        <Param name="colorSpace" updates="constant" val="rgb" valType="str"/>
        <Param name="disabled" updates="None" val="False" valType="bool"/>
        <Param name="durationEstim" updates="None" val="" valType="code"/>
        <Param name="flip" updates="constant" val="" valType="str"/>
        <Param name="font" updates="constant" val="Arial" valType="str"/>
        <Param name="languageStyle" updates="None" val="LTR" valType="str"/>
        <Param name="letterHeight" updates="constant" val="0.1" valType="code"/>
        <Param name="name" updates="None" val="feedback_text1" valType="code"/>
        <Param name="opacity" updates="constant" val="1" valType="code"/>
        <Param name="ori" updates="constant" val="0" valType="code"/>
        <Param name="pos" updates="constant" val="(0, 0)" valType="code"/>
        <Param name="saveStartStop" updates="None" val="True" valType="bool"/>
        <Param name="startEstim" updates="None" val="" valType="code"/>
        <Param name="startType" updates="None" val="time (s)" valType="str"/>
        <Param name="startVal" updates="None" val="0.0" valType="code"/>
        <Param name="stopType" updates="None" val="duration (s)" valType="str"/>
        <Param name="stopVal" updates="constant" val="0.75" valType="code"/>
        <Param name="syncScreenRefresh" updates="None" val="True" valType="bool"/>
        <Param name="text" updates="set every repeat" val="$trialFeedback1" valType="extendedStr"/>
        <Param name="units" updates="None" val="from exp settings" valType="str"/>
        <Param name="wrapWidth" updates="constant" val="" valType="code"/>
      </TextComponent>
    </Routine>
    <Routine name="Block2">
      <ImageComponent name="image2">
        <Param name="color" updates="constant" val="$[1,1,1]" valType="str"/>
        <Param name="colorSpace" updates="constant" val="rgb" valType="str"/>
        <Param name="disabled" updates="None" val="False" valType="bool"/>
        <Param name="durationEstim" updates="None" val="" valType="code"/>
        <Param name="flipHoriz" updates="constant" val="False" valType="bool"/>
        <Param name="flipVert" updates="constant" val="False" valType="bool"/>
        <Param name="image" updates="set every repeat" val="$Block2Stim" valType="str"/>
        <Param name="interpolate" updates="constant" val="linear" valType="str"/>
        <Param name="mask" updates="constant" val="None" valType="str"/>
        <Param name="name" updates="None" val="image2" valType="code"/>
        <Param name="opacity" updates="constant" val="1" valType="code"/>
        <Param name="ori" updates="constant" val="0" valType="code"/>
        <Param name="pos" updates="constant" val="(0, 0)" valType="code"/>
        <Param name="saveStartStop" updates="None" val="True" valType="bool"/>
        <Param name="size" updates="constant" val="" valType="code"/>
        <Param name="startEstim" updates="None" val="" valType="code"/>
        <Param name="startType" updates="None" val="time (s)" valType="str"/>
        <Param name="startVal" updates="None" val="0.0" valType="code"/>
        <Param name="stopType" updates="None" val="duration (s)" valType="str"/>
        <Param name="stopVal" updates="constant" val="" valType="code"/>
        <Param name="syncScreenRefresh" updates="None" val="True" valType="bool"/>
        <Param name="texture resolution" updates="constant" val="512" valType="code"/>
        <Param name="units" updates="None" val="from exp settings" valType="str"/>
      </ImageComponent>
      <TextComponent name="text2">
        <Param name="color" updates="constant" val="white" valType="str"/>
        <Param name="colorSpace" updates="constant" val="rgb" valType="str"/>
        <Param name="disabled" updates="None" val="False" valType="bool"/>
        <Param name="durationEstim" updates="None" val="" valType="code"/>
        <Param name="flip" updates="constant" val="" valType="str"/>
        <Param name="font" updates="constant" val="Arial" valType="str"/>
        <Param name="languageStyle" updates="None" val="LTR" valType="str"/>
        <Param name="letterHeight" updates="constant" val="0.03" valType="code"/>
        <Param name="name" updates="None" val="text2" valType="code"/>
        <Param name="opacity" updates="constant" val="1" valType="code"/>
        <Param name="ori" updates="constant" val="0" valType="code"/>
        <Param name="pos" updates="constant" val="(0, -0.35)" valType="code"/>
        <Param name="saveStartStop" updates="None" val="True" valType="bool"/>
        <Param name="startEstim" updates="None" val="" valType="code"/>
        <Param name="startType" updates="None" val="time (s)" valType="str"/>
        <Param name="startVal" updates="None" val="0.0" valType="code"/>
        <Param name="stopType" updates="None" val="duration (s)" valType="str"/>
        <Param name="stopVal" updates="constant" val="" valType="code"/>
        <Param name="syncScreenRefresh" updates="None" val="True" valType="bool"/>
        <Param name="text" updates="constant" val="&lt;-  or  -&gt;" valType="extendedStr"/>
        <Param name="units" updates="None" val="from exp settings" valType="str"/>
        <Param name="wrapWidth" updates="constant" val="" valType="code"/>
      </TextComponent>
      <KeyboardComponent name="key_resp2">
        <Param name="allowedKeys" updates="constant" val="'left','right'" valType="code"/>
        <Param name="correctAns" updates="constant" val="$Block2Corr" valType="str"/>
        <Param name="disabled" updates="None" val="False" valType="bool"/>
        <Param name="discard previous" updates="constant" val="True" valType="bool"/>
        <Param name="durationEstim" updates="None" val="" valType="code"/>
        <Param name="forceEndRoutine" updates="constant" val="True" valType="bool"/>
        <Param name="name" updates="None" val="key_resp2" valType="code"/>
        <Param name="saveStartStop" updates="None" val="True" valType="bool"/>
        <Param name="startEstim" updates="None" val="" valType="code"/>
        <Param name="startType" updates="None" val="time (s)" valType="str"/>
        <Param name="startVal" updates="None" val="0.0" valType="code"/>
        <Param name="stopType" updates="None" val="duration (s)" valType="str"/>
        <Param name="stopVal" updates="constant" val="" valType="code"/>
        <Param name="store" updates="constant" val="last key" valType="str"/>
        <Param name="storeCorrect" updates="constant" val="True" valType="bool"/>
        <Param name="syncScreenRefresh" updates="constant" val="True" valType="bool"/>
      </KeyboardComponent>
    </Routine>
    <Routine name="Feedback2">
      <CodeComponent name="code2">
        <Param name="Before Experiment" updates="constant" val="" valType="extendedCode"/>
        <Param name="Before JS Experiment" updates="constant" val="" valType="extendedCode"/>
        <Param name="Begin Experiment" updates="constant" val="" valType="extendedCode"/>
        <Param name="Begin JS Experiment" updates="constant" val="" valType="extendedCode"/>
        <Param name="Begin JS Routine" updates="constant" val="if ((key_resp2.keys === Block2Corr)) {&amp;#10;    trialFeedback2 = &quot;Correct!&quot;;&amp;#10;    trialBinary2 = 1;&amp;#10;} else {&amp;#10;    trialFeedback2 = &quot;Incorrect&quot;;&amp;#10;    trialBinary2 = 0;&amp;#10;}&amp;#10;Block2_loop.addData(&quot;trialCorrect&quot;, trialBinary2);&amp;#10;" valType="extendedCode"/>
        <Param name="Begin Routine" updates="constant" val="if key_resp2.keys == Block2Corr:&amp;#10;    trialFeedback2 = 'Correct!'&amp;#10;    trialBinary2 = 1&amp;#10;else:&amp;#10;    trialFeedback2 = 'Incorrect'&amp;#10;    trialBinary2 = 0&amp;#10;&amp;#10;Block2_loop.addData('trialCorrect', trialBinary2)" valType="extendedCode"/>
        <Param name="Code Type" updates="None" val="Auto-&gt;JS" valType="str"/>
        <Param name="Each Frame" updates="constant" val="" valType="extendedCode"/>
        <Param name="Each JS Frame" updates="constant" val="" valType="extendedCode"/>
        <Param name="End Experiment" updates="constant" val="" valType="extendedCode"/>
        <Param name="End JS Experiment" updates="constant" val="" valType="extendedCode"/>
        <Param name="End JS Routine" updates="constant" val="" valType="extendedCode"/>
        <Param name="End Routine" updates="constant" val="" valType="extendedCode"/>
        <Param name="disabled" updates="None" val="False" valType="bool"/>
        <Param name="name" updates="None" val="code2" valType="code"/>
      </CodeComponent>
      <TextComponent name="feedback_text2">
        <Param name="color" updates="constant" val="white" valType="str"/>
        <Param name="colorSpace" updates="constant" val="rgb" valType="str"/>
        <Param name="disabled" updates="None" val="False" valType="bool"/>
        <Param name="durationEstim" updates="None" val="" valType="code"/>
        <Param name="flip" updates="constant" val="" valType="str"/>
        <Param name="font" updates="constant" val="Arial" valType="str"/>
        <Param name="languageStyle" updates="None" val="LTR" valType="str"/>
        <Param name="letterHeight" updates="constant" val="0.1" valType="code"/>
        <Param name="name" updates="None" val="feedback_text2" valType="code"/>
        <Param name="opacity" updates="constant" val="1" valType="code"/>
        <Param name="ori" updates="constant" val="0" valType="code"/>
        <Param name="pos" updates="constant" val="(0, 0)" valType="code"/>
        <Param name="saveStartStop" updates="None" val="True" valType="bool"/>
        <Param name="startEstim" updates="None" val="" valType="code"/>
        <Param name="startType" updates="None" val="time (s)" valType="str"/>
        <Param name="startVal" updates="None" val="0.0" valType="code"/>
        <Param name="stopType" updates="None" val="duration (s)" valType="str"/>
        <Param name="stopVal" updates="constant" val="0.75" valType="code"/>
        <Param name="syncScreenRefresh" updates="None" val="True" valType="bool"/>
        <Param name="text" updates="set every repeat" val="$trialFeedback2" valType="extendedStr"/>
        <Param name="units" updates="None" val="from exp settings" valType="str"/>
        <Param name="wrapWidth" updates="constant" val="" valType="code"/>
      </TextComponent>
    </Routine>
    <Routine name="Block3">
      <ImageComponent name="image3">
        <Param name="color" updates="constant" val="$[1,1,1]" valType="str"/>
        <Param name="colorSpace" updates="constant" val="rgb" valType="str"/>
        <Param name="disabled" updates="None" val="False" valType="bool"/>
        <Param name="durationEstim" updates="None" val="" valType="code"/>
        <Param name="flipHoriz" updates="constant" val="False" valType="bool"/>
        <Param name="flipVert" updates="constant" val="False" valType="bool"/>
        <Param name="image" updates="set every repeat" val="$Block3Stim" valType="str"/>
        <Param name="interpolate" updates="constant" val="linear" valType="str"/>
        <Param name="mask" updates="constant" val="None" valType="str"/>
        <Param name="name" updates="None" val="image3" valType="code"/>
        <Param name="opacity" updates="constant" val="1" valType="code"/>
        <Param name="ori" updates="constant" val="0" valType="code"/>
        <Param name="pos" updates="constant" val="(0, 0)" valType="code"/>
        <Param name="saveStartStop" updates="None" val="True" valType="bool"/>
        <Param name="size" updates="constant" val="" valType="code"/>
        <Param name="startEstim" updates="None" val="" valType="code"/>
        <Param name="startType" updates="None" val="time (s)" valType="str"/>
        <Param name="startVal" updates="None" val="0.0" valType="code"/>
        <Param name="stopType" updates="None" val="duration (s)" valType="str"/>
        <Param name="stopVal" updates="constant" val="" valType="code"/>
        <Param name="syncScreenRefresh" updates="None" val="True" valType="bool"/>
        <Param name="texture resolution" updates="constant" val="512" valType="code"/>
        <Param name="units" updates="None" val="from exp settings" valType="str"/>
      </ImageComponent>
      <TextComponent name="text3">
        <Param name="color" updates="constant" val="white" valType="str"/>
        <Param name="colorSpace" updates="constant" val="rgb" valType="str"/>
        <Param name="disabled" updates="None" val="False" valType="bool"/>
        <Param name="durationEstim" updates="None" val="" valType="code"/>
        <Param name="flip" updates="constant" val="" valType="str"/>
        <Param name="font" updates="constant" val="Arial" valType="str"/>
        <Param name="languageStyle" updates="None" val="LTR" valType="str"/>
        <Param name="letterHeight" updates="constant" val="0.03" valType="code"/>
        <Param name="name" updates="None" val="text3" valType="code"/>
        <Param name="opacity" updates="constant" val="1" valType="code"/>
        <Param name="ori" updates="constant" val="0" valType="code"/>
        <Param name="pos" updates="constant" val="(0, -0.35)" valType="code"/>
        <Param name="saveStartStop" updates="None" val="True" valType="bool"/>
        <Param name="startEstim" updates="None" val="" valType="code"/>
        <Param name="startType" updates="None" val="time (s)" valType="str"/>
        <Param name="startVal" updates="None" val="0.0" valType="code"/>
        <Param name="stopType" updates="None" val="duration (s)" valType="str"/>
        <Param name="stopVal" updates="constant" val="" valType="code"/>
        <Param name="syncScreenRefresh" updates="None" val="True" valType="bool"/>
        <Param name="text" updates="constant" val="&lt;-  or  -&gt;" valType="extendedStr"/>
        <Param name="units" updates="None" val="from exp settings" valType="str"/>
        <Param name="wrapWidth" updates="constant" val="" valType="code"/>
      </TextComponent>
      <KeyboardComponent name="key_resp3">
        <Param name="allowedKeys" updates="constant" val="'left','right'" valType="code"/>
        <Param name="correctAns" updates="constant" val="$Block3Corr" valType="str"/>
        <Param name="disabled" updates="None" val="False" valType="bool"/>
        <Param name="discard previous" updates="constant" val="True" valType="bool"/>
        <Param name="durationEstim" updates="None" val="" valType="code"/>
        <Param name="forceEndRoutine" updates="constant" val="True" valType="bool"/>
        <Param name="name" updates="None" val="key_resp3" valType="code"/>
        <Param name="saveStartStop" updates="None" val="True" valType="bool"/>
        <Param name="startEstim" updates="None" val="" valType="code"/>
        <Param name="startType" updates="None" val="time (s)" valType="str"/>
        <Param name="startVal" updates="None" val="0.0" valType="code"/>
        <Param name="stopType" updates="None" val="duration (s)" valType="str"/>
        <Param name="stopVal" updates="constant" val="" valType="code"/>
        <Param name="store" updates="constant" val="last key" valType="str"/>
        <Param name="storeCorrect" updates="constant" val="True" valType="bool"/>
        <Param name="syncScreenRefresh" updates="constant" val="True" valType="bool"/>
      </KeyboardComponent>
    </Routine>
    <Routine name="Feedback3">
      <CodeComponent name="code3">
        <Param name="Before Experiment" updates="constant" val="" valType="extendedCode"/>
        <Param name="Before JS Experiment" updates="constant" val="" valType="extendedCode"/>
        <Param name="Begin Experiment" updates="constant" val="" valType="extendedCode"/>
        <Param name="Begin JS Experiment" updates="constant" val="" valType="extendedCode"/>
        <Param name="Begin JS Routine" updates="constant" val="if ((key_resp3.keys === Block3Corr)) {&amp;#10;    trialFeedback3 = &quot;Correct!&quot;;&amp;#10;    trialBinary3 = 1;&amp;#10;} else {&amp;#10;    trialFeedback3 = &quot;Incorrect&quot;;&amp;#10;    trialBinary3 = 0;&amp;#10;}&amp;#10;Block2_loop.addData(&quot;trialCorrect&quot;, trialBinary3);&amp;#10;" valType="extendedCode"/>
        <Param name="Begin Routine" updates="constant" val="if key_resp3.keys == Block3Corr:&amp;#10;    trialFeedback3 = 'Correct!'&amp;#10;    trialBinary3 = 1&amp;#10;else:&amp;#10;    trialFeedback3 = 'Incorrect'&amp;#10;    trialBinary3 = 0&amp;#10;&amp;#10;Block2_loop.addData('trialCorrect', trialBinary3)" valType="extendedCode"/>
        <Param name="Code Type" updates="None" val="Auto-&gt;JS" valType="str"/>
        <Param name="Each Frame" updates="constant" val="" valType="extendedCode"/>
        <Param name="Each JS Frame" updates="constant" val="" valType="extendedCode"/>
        <Param name="End Experiment" updates="constant" val="" valType="extendedCode"/>
        <Param name="End JS Experiment" updates="constant" val="" valType="extendedCode"/>
        <Param name="End JS Routine" updates="constant" val="" valType="extendedCode"/>
        <Param name="End Routine" updates="constant" val="" valType="extendedCode"/>
        <Param name="disabled" updates="None" val="False" valType="bool"/>
        <Param name="name" updates="None" val="code3" valType="code"/>
      </CodeComponent>
      <TextComponent name="feedback_text3">
        <Param name="color" updates="constant" val="white" valType="str"/>
        <Param name="colorSpace" updates="constant" val="rgb" valType="str"/>
        <Param name="disabled" updates="None" val="False" valType="bool"/>
        <Param name="durationEstim" updates="None" val="" valType="code"/>
        <Param name="flip" updates="constant" val="" valType="str"/>
        <Param name="font" updates="constant" val="Arial" valType="str"/>
        <Param name="languageStyle" updates="None" val="LTR" valType="str"/>
        <Param name="letterHeight" updates="constant" val="0.1" valType="code"/>
        <Param name="name" updates="None" val="feedback_text3" valType="code"/>
        <Param name="opacity" updates="constant" val="1" valType="code"/>
        <Param name="ori" updates="constant" val="0" valType="code"/>
        <Param name="pos" updates="constant" val="(0, 0)" valType="code"/>
        <Param name="saveStartStop" updates="None" val="True" valType="bool"/>
        <Param name="startEstim" updates="None" val="" valType="code"/>
        <Param name="startType" updates="None" val="time (s)" valType="str"/>
        <Param name="startVal" updates="None" val="0.0" valType="code"/>
        <Param name="stopType" updates="None" val="duration (s)" valType="str"/>
        <Param name="stopVal" updates="constant" val="0.75" valType="code"/>
        <Param name="syncScreenRefresh" updates="None" val="True" valType="bool"/>
        <Param name="text" updates="set every repeat" val="$trialFeedback3" valType="extendedStr"/>
        <Param name="units" updates="None" val="from exp settings" valType="str"/>
        <Param name="wrapWidth" updates="constant" val="" valType="code"/>
      </TextComponent>
    </Routine>
    <Routine name="Start1">
      <TextComponent name="start_text1">
        <Param name="color" updates="constant" val="white" valType="str"/>
        <Param name="colorSpace" updates="constant" val="rgb" valType="str"/>
        <Param name="disabled" updates="None" val="False" valType="bool"/>
        <Param name="durationEstim" updates="None" val="" valType="code"/>
        <Param name="flip" updates="constant" val="" valType="str"/>
        <Param name="font" updates="constant" val="Arial" valType="str"/>
        <Param name="languageStyle" updates="None" val="LTR" valType="str"/>
        <Param name="letterHeight" updates="constant" val="0.05" valType="code"/>
        <Param name="name" updates="None" val="start_text1" valType="code"/>
        <Param name="opacity" updates="constant" val="1" valType="code"/>
        <Param name="ori" updates="constant" val="0" valType="code"/>
        <Param name="pos" updates="constant" val="(0, 0)" valType="code"/>
        <Param name="saveStartStop" updates="None" val="True" valType="bool"/>
        <Param name="startEstim" updates="None" val="" valType="code"/>
        <Param name="startType" updates="None" val="time (s)" valType="str"/>
        <Param name="startVal" updates="None" val="0.0" valType="code"/>
        <Param name="stopType" updates="None" val="duration (s)" valType="str"/>
        <Param name="stopVal" updates="constant" val="" valType="code"/>
        <Param name="syncScreenRefresh" updates="None" val="True" valType="bool"/>
        <Param name="text" updates="constant" val="Starting Block 1." valType="extendedStr"/>
        <Param name="units" updates="None" val="from exp settings" valType="str"/>
        <Param name="wrapWidth" updates="constant" val="" valType="code"/>
      </TextComponent>
      <TextComponent name="start_text2">
        <Param name="color" updates="constant" val="white" valType="str"/>
        <Param name="colorSpace" updates="constant" val="rgb" valType="str"/>
        <Param name="disabled" updates="None" val="False" valType="bool"/>
        <Param name="durationEstim" updates="None" val="" valType="code"/>
        <Param name="flip" updates="constant" val="" valType="str"/>
        <Param name="font" updates="constant" val="Arial" valType="str"/>
        <Param name="languageStyle" updates="None" val="LTR" valType="str"/>
        <Param name="letterHeight" updates="constant" val="0.03" valType="code"/>
        <Param name="name" updates="None" val="start_text2" valType="code"/>
        <Param name="opacity" updates="constant" val="1" valType="code"/>
        <Param name="ori" updates="constant" val="0" valType="code"/>
        <Param name="pos" updates="constant" val="(0, -0.35)" valType="code"/>
        <Param name="saveStartStop" updates="None" val="True" valType="bool"/>
        <Param name="startEstim" updates="None" val="" valType="code"/>
        <Param name="startType" updates="None" val="time (s)" valType="str"/>
        <Param name="startVal" updates="None" val="0.0" valType="code"/>
        <Param name="stopType" updates="None" val="duration (s)" valType="str"/>
        <Param name="stopVal" updates="constant" val="" valType="code"/>
        <Param name="syncScreenRefresh" updates="None" val="True" valType="bool"/>
        <Param name="text" updates="constant" val="Press “s” to start the block." valType="extendedStr"/>
        <Param name="units" updates="None" val="from exp settings" valType="str"/>
        <Param name="wrapWidth" updates="constant" val="" valType="code"/>
      </TextComponent>
      <KeyboardComponent name="start_resp1">
        <Param name="allowedKeys" updates="constant" val="'s'" valType="code"/>
        <Param name="correctAns" updates="constant" val="" valType="str"/>
        <Param name="disabled" updates="None" val="False" valType="bool"/>
        <Param name="discard previous" updates="constant" val="True" valType="bool"/>
        <Param name="durationEstim" updates="None" val="" valType="code"/>
        <Param name="forceEndRoutine" updates="constant" val="True" valType="bool"/>
        <Param name="name" updates="None" val="start_resp1" valType="code"/>
        <Param name="saveStartStop" updates="None" val="True" valType="bool"/>
        <Param name="startEstim" updates="None" val="" valType="code"/>
        <Param name="startType" updates="None" val="time (s)" valType="str"/>
        <Param name="startVal" updates="None" val="0.0" valType="code"/>
        <Param name="stopType" updates="None" val="duration (s)" valType="str"/>
        <Param name="stopVal" updates="constant" val="" valType="code"/>
        <Param name="store" updates="constant" val="last key" valType="str"/>
        <Param name="storeCorrect" updates="constant" val="False" valType="bool"/>
        <Param name="syncScreenRefresh" updates="constant" val="True" valType="bool"/>
      </KeyboardComponent>
    </Routine>
    <Routine name="Welcome">
      <TextComponent name="welcome_text1">
        <Param name="color" updates="constant" val="white" valType="str"/>
        <Param name="colorSpace" updates="constant" val="rgb" valType="str"/>
        <Param name="disabled" updates="None" val="False" valType="bool"/>
        <Param name="durationEstim" updates="None" val="" valType="code"/>
        <Param name="flip" updates="constant" val="" valType="str"/>
        <Param name="font" updates="constant" val="Arial" valType="str"/>
        <Param name="languageStyle" updates="None" val="LTR" valType="str"/>
        <Param name="letterHeight" updates="constant" val="0.1" valType="code"/>
        <Param name="name" updates="None" val="welcome_text1" valType="code"/>
        <Param name="opacity" updates="constant" val="1" valType="code"/>
        <Param name="ori" updates="constant" val="0" valType="code"/>
        <Param name="pos" updates="constant" val="(0, 0.3)" valType="code"/>
        <Param name="saveStartStop" updates="None" val="True" valType="bool"/>
        <Param name="startEstim" updates="None" val="" valType="code"/>
        <Param name="startType" updates="None" val="time (s)" valType="str"/>
        <Param name="startVal" updates="None" val="0.0" valType="code"/>
        <Param name="stopType" updates="None" val="duration (s)" valType="str"/>
        <Param name="stopVal" updates="constant" val="" valType="code"/>
        <Param name="syncScreenRefresh" updates="None" val="True" valType="bool"/>
        <Param name="text" updates="constant" val="Welcome to the Experiment!" valType="extendedStr"/>
        <Param name="units" updates="None" val="from exp settings" valType="str"/>
        <Param name="wrapWidth" updates="constant" val="" valType="code"/>
      </TextComponent>
      <TextComponent name="welcome_text2">
        <Param name="color" updates="constant" val="white" valType="str"/>
        <Param name="colorSpace" updates="constant" val="rgb" valType="str"/>
        <Param name="disabled" updates="None" val="False" valType="bool"/>
        <Param name="durationEstim" updates="None" val="" valType="code"/>
        <Param name="flip" updates="constant" val="" valType="str"/>
        <Param name="font" updates="constant" val="Arial" valType="str"/>
        <Param name="languageStyle" updates="None" val="LTR" valType="str"/>
        <Param name="letterHeight" updates="constant" val="0.05" valType="code"/>
        <Param name="name" updates="None" val="welcome_text2" valType="code"/>
        <Param name="opacity" updates="constant" val="1" valType="code"/>
        <Param name="ori" updates="constant" val="0" valType="code"/>
        <Param name="pos" updates="constant" val="(0, 0)" valType="code"/>
        <Param name="saveStartStop" updates="None" val="True" valType="bool"/>
        <Param name="startEstim" updates="None" val="" valType="code"/>
        <Param name="startType" updates="None" val="time (s)" valType="str"/>
        <Param name="startVal" updates="None" val="0.0" valType="code"/>
        <Param name="stopType" updates="None" val="duration (s)" valType="str"/>
        <Param name="stopVal" updates="constant" val="" valType="code"/>
        <Param name="syncScreenRefresh" updates="None" val="True" valType="bool"/>
        <Param name="text" updates="constant" val="We appreciate your participation." valType="extendedStr"/>
        <Param name="units" updates="None" val="from exp settings" valType="str"/>
        <Param name="wrapWidth" updates="constant" val="" valType="code"/>
      </TextComponent>
      <TextComponent name="welcome_text3">
        <Param name="color" updates="constant" val="white" valType="str"/>
        <Param name="colorSpace" updates="constant" val="rgb" valType="str"/>
        <Param name="disabled" updates="None" val="False" valType="bool"/>
        <Param name="durationEstim" updates="None" val="" valType="code"/>
        <Param name="flip" updates="constant" val="" valType="str"/>
        <Param name="font" updates="constant" val="Arial" valType="str"/>
        <Param name="languageStyle" updates="None" val="LTR" valType="str"/>
        <Param name="letterHeight" updates="constant" val="0.03" valType="code"/>
        <Param name="name" updates="None" val="welcome_text3" valType="code"/>
        <Param name="opacity" updates="constant" val="1" valType="code"/>
        <Param name="ori" updates="constant" val="0" valType="code"/>
        <Param name="pos" updates="constant" val="(0, -0.35)" valType="code"/>
        <Param name="saveStartStop" updates="None" val="True" valType="bool"/>
        <Param name="startEstim" updates="None" val="" valType="code"/>
        <Param name="startType" updates="None" val="time (s)" valType="str"/>
        <Param name="startVal" updates="None" val="0.0" valType="code"/>
        <Param name="stopType" updates="None" val="duration (s)" valType="str"/>
        <Param name="stopVal" updates="constant" val="" valType="code"/>
        <Param name="syncScreenRefresh" updates="None" val="True" valType="bool"/>
        <Param name="text" updates="constant" val="Press “enter” or “return” to continue." valType="extendedStr"/>
        <Param name="units" updates="None" val="from exp settings" valType="str"/>
        <Param name="wrapWidth" updates="constant" val="" valType="code"/>
      </TextComponent>
      <KeyboardComponent name="welcome_resp">
        <Param name="allowedKeys" updates="constant" val="'return'" valType="code"/>
        <Param name="correctAns" updates="constant" val="" valType="str"/>
        <Param name="disabled" updates="None" val="False" valType="bool"/>
        <Param name="discard previous" updates="constant" val="True" valType="bool"/>
        <Param name="durationEstim" updates="None" val="" valType="code"/>
        <Param name="forceEndRoutine" updates="constant" val="True" valType="bool"/>
        <Param name="name" updates="None" val="welcome_resp" valType="code"/>
        <Param name="saveStartStop" updates="None" val="True" valType="bool"/>
        <Param name="startEstim" updates="None" val="" valType="code"/>
        <Param name="startType" updates="None" val="time (s)" valType="str"/>
        <Param name="startVal" updates="None" val="0.0" valType="code"/>
        <Param name="stopType" updates="None" val="duration (s)" valType="str"/>
        <Param name="stopVal" updates="constant" val="" valType="code"/>
        <Param name="store" updates="constant" val="last key" valType="str"/>
        <Param name="storeCorrect" updates="constant" val="False" valType="bool"/>
        <Param name="syncScreenRefresh" updates="constant" val="True" valType="bool"/>
      </KeyboardComponent>
    </Routine>
    <Routine name="Start2">
      <TextComponent name="start_text3">
        <Param name="color" updates="constant" val="white" valType="str"/>
        <Param name="colorSpace" updates="constant" val="rgb" valType="str"/>
        <Param name="disabled" updates="None" val="False" valType="bool"/>
        <Param name="durationEstim" updates="None" val="" valType="code"/>
        <Param name="flip" updates="constant" val="" valType="str"/>
        <Param name="font" updates="constant" val="Arial" valType="str"/>
        <Param name="languageStyle" updates="None" val="LTR" valType="str"/>
        <Param name="letterHeight" updates="constant" val="0.05" valType="code"/>
        <Param name="name" updates="None" val="start_text3" valType="code"/>
        <Param name="opacity" updates="constant" val="1" valType="code"/>
        <Param name="ori" updates="constant" val="0" valType="code"/>
        <Param name="pos" updates="constant" val="(0, 0)" valType="code"/>
        <Param name="saveStartStop" updates="None" val="True" valType="bool"/>
        <Param name="startEstim" updates="None" val="" valType="code"/>
        <Param name="startType" updates="None" val="time (s)" valType="str"/>
        <Param name="startVal" updates="None" val="0.0" valType="code"/>
        <Param name="stopType" updates="None" val="duration (s)" valType="str"/>
        <Param name="stopVal" updates="constant" val="" valType="code"/>
        <Param name="syncScreenRefresh" updates="None" val="True" valType="bool"/>
        <Param name="text" updates="constant" val="Starting Block 2." valType="extendedStr"/>
        <Param name="units" updates="None" val="from exp settings" valType="str"/>
        <Param name="wrapWidth" updates="constant" val="" valType="code"/>
      </TextComponent>
      <TextComponent name="start_text4">
        <Param name="color" updates="constant" val="white" valType="str"/>
        <Param name="colorSpace" updates="constant" val="rgb" valType="str"/>
        <Param name="disabled" updates="None" val="False" valType="bool"/>
        <Param name="durationEstim" updates="None" val="" valType="code"/>
        <Param name="flip" updates="constant" val="" valType="str"/>
        <Param name="font" updates="constant" val="Arial" valType="str"/>
        <Param name="languageStyle" updates="None" val="LTR" valType="str"/>
        <Param name="letterHeight" updates="constant" val="0.03" valType="code"/>
        <Param name="name" updates="None" val="start_text4" valType="code"/>
        <Param name="opacity" updates="constant" val="1" valType="code"/>
        <Param name="ori" updates="constant" val="0" valType="code"/>
        <Param name="pos" updates="constant" val="(0, -0.35)" valType="code"/>
        <Param name="saveStartStop" updates="None" val="True" valType="bool"/>
        <Param name="startEstim" updates="None" val="" valType="code"/>
        <Param name="startType" updates="None" val="time (s)" valType="str"/>
        <Param name="startVal" updates="None" val="0.0" valType="code"/>
        <Param name="stopType" updates="None" val="duration (s)" valType="str"/>
        <Param name="stopVal" updates="constant" val="" valType="code"/>
        <Param name="syncScreenRefresh" updates="None" val="True" valType="bool"/>
        <Param name="text" updates="constant" val="Press “s” to start the block." valType="extendedStr"/>
        <Param name="units" updates="None" val="from exp settings" valType="str"/>
        <Param name="wrapWidth" updates="constant" val="" valType="code"/>
      </TextComponent>
      <KeyboardComponent name="start_resp2">
        <Param name="allowedKeys" updates="constant" val="'s'" valType="code"/>
        <Param name="correctAns" updates="constant" val="" valType="str"/>
        <Param name="disabled" updates="None" val="False" valType="bool"/>
        <Param name="discard previous" updates="constant" val="True" valType="bool"/>
        <Param name="durationEstim" updates="None" val="" valType="code"/>
        <Param name="forceEndRoutine" updates="constant" val="True" valType="bool"/>
        <Param name="name" updates="None" val="start_resp2" valType="code"/>
        <Param name="saveStartStop" updates="None" val="True" valType="bool"/>
        <Param name="startEstim" updates="None" val="" valType="code"/>
        <Param name="startType" updates="None" val="time (s)" valType="str"/>
        <Param name="startVal" updates="None" val="0.0" valType="code"/>
        <Param name="stopType" updates="None" val="duration (s)" valType="str"/>
        <Param name="stopVal" updates="constant" val="" valType="code"/>
        <Param name="store" updates="constant" val="last key" valType="str"/>
        <Param name="storeCorrect" updates="constant" val="False" valType="bool"/>
        <Param name="syncScreenRefresh" updates="constant" val="True" valType="bool"/>
      </KeyboardComponent>
    </Routine>
    <Routine name="Start3">
      <TextComponent name="start_text5">
        <Param name="color" updates="constant" val="white" valType="str"/>
        <Param name="colorSpace" updates="constant" val="rgb" valType="str"/>
        <Param name="disabled" updates="None" val="False" valType="bool"/>
        <Param name="durationEstim" updates="None" val="" valType="code"/>
        <Param name="flip" updates="constant" val="" valType="str"/>
        <Param name="font" updates="constant" val="Arial" valType="str"/>
        <Param name="languageStyle" updates="None" val="LTR" valType="str"/>
        <Param name="letterHeight" updates="constant" val="0.05" valType="code"/>
        <Param name="name" updates="None" val="start_text5" valType="code"/>
        <Param name="opacity" updates="constant" val="1" valType="code"/>
        <Param name="ori" updates="constant" val="0" valType="code"/>
        <Param name="pos" updates="constant" val="(0, 0)" valType="code"/>
        <Param name="saveStartStop" updates="None" val="True" valType="bool"/>
        <Param name="startEstim" updates="None" val="" valType="code"/>
        <Param name="startType" updates="None" val="time (s)" valType="str"/>
        <Param name="startVal" updates="None" val="0.0" valType="code"/>
        <Param name="stopType" updates="None" val="duration (s)" valType="str"/>
        <Param name="stopVal" updates="constant" val="" valType="code"/>
        <Param name="syncScreenRefresh" updates="None" val="True" valType="bool"/>
        <Param name="text" updates="constant" val="Starting Block 3." valType="extendedStr"/>
        <Param name="units" updates="None" val="from exp settings" valType="str"/>
        <Param name="wrapWidth" updates="constant" val="" valType="code"/>
      </TextComponent>
      <TextComponent name="start_text6">
        <Param name="color" updates="constant" val="white" valType="str"/>
        <Param name="colorSpace" updates="constant" val="rgb" valType="str"/>
        <Param name="disabled" updates="None" val="False" valType="bool"/>
        <Param name="durationEstim" updates="None" val="" valType="code"/>
        <Param name="flip" updates="constant" val="" valType="str"/>
        <Param name="font" updates="constant" val="Arial" valType="str"/>
        <Param name="languageStyle" updates="None" val="LTR" valType="str"/>
        <Param name="letterHeight" updates="constant" val="0.03" valType="code"/>
        <Param name="name" updates="None" val="start_text6" valType="code"/>
        <Param name="opacity" updates="constant" val="1" valType="code"/>
        <Param name="ori" updates="constant" val="0" valType="code"/>
        <Param name="pos" updates="constant" val="(0, -0.35)" valType="code"/>
        <Param name="saveStartStop" updates="None" val="True" valType="bool"/>
        <Param name="startEstim" updates="None" val="" valType="code"/>
        <Param name="startType" updates="None" val="time (s)" valType="str"/>
        <Param name="startVal" updates="None" val="0.0" valType="code"/>
        <Param name="stopType" updates="None" val="duration (s)" valType="str"/>
        <Param name="stopVal" updates="constant" val="" valType="code"/>
        <Param name="syncScreenRefresh" updates="None" val="True" valType="bool"/>
        <Param name="text" updates="constant" val="Press “s” to start the block." valType="extendedStr"/>
        <Param name="units" updates="None" val="from exp settings" valType="str"/>
        <Param name="wrapWidth" updates="constant" val="" valType="code"/>
      </TextComponent>
      <KeyboardComponent name="start_resp3">
        <Param name="allowedKeys" updates="constant" val="'s'" valType="code"/>
        <Param name="correctAns" updates="constant" val="" valType="str"/>
        <Param name="disabled" updates="None" val="False" valType="bool"/>
        <Param name="discard previous" updates="constant" val="True" valType="bool"/>
        <Param name="durationEstim" updates="None" val="" valType="code"/>
        <Param name="forceEndRoutine" updates="constant" val="True" valType="bool"/>
        <Param name="name" updates="None" val="start_resp3" valType="code"/>
        <Param name="saveStartStop" updates="None" val="True" valType="bool"/>
        <Param name="startEstim" updates="None" val="" valType="code"/>
        <Param name="startType" updates="None" val="time (s)" valType="str"/>
        <Param name="startVal" updates="None" val="0.0" valType="code"/>
        <Param name="stopType" updates="None" val="duration (s)" valType="str"/>
        <Param name="stopVal" updates="constant" val="" valType="code"/>
        <Param name="store" updates="constant" val="last key" valType="str"/>
        <Param name="storeCorrect" updates="constant" val="False" valType="bool"/>
        <Param name="syncScreenRefresh" updates="constant" val="True" valType="bool"/>
      </KeyboardComponent>
    </Routine>
    <Routine name="Break1">
      <TextComponent name="break_text1">
        <Param name="color" updates="constant" val="white" valType="str"/>
        <Param name="colorSpace" updates="constant" val="rgb" valType="str"/>
        <Param name="disabled" updates="None" val="False" valType="bool"/>
        <Param name="durationEstim" updates="None" val="" valType="code"/>
        <Param name="flip" updates="constant" val="" valType="str"/>
        <Param name="font" updates="constant" val="Arial" valType="str"/>
        <Param name="languageStyle" updates="None" val="LTR" valType="str"/>
        <Param name="letterHeight" updates="constant" val="0.035" valType="code"/>
        <Param name="name" updates="None" val="break_text1" valType="code"/>
        <Param name="opacity" updates="constant" val="1" valType="code"/>
        <Param name="ori" updates="constant" val="0" valType="code"/>
        <Param name="pos" updates="constant" val="(0, 0)" valType="code"/>
        <Param name="saveStartStop" updates="None" val="True" valType="bool"/>
        <Param name="startEstim" updates="None" val="" valType="code"/>
        <Param name="startType" updates="None" val="time (s)" valType="str"/>
        <Param name="startVal" updates="None" val="0.0" valType="code"/>
        <Param name="stopType" updates="None" val="duration (s)" valType="str"/>
        <Param name="stopVal" updates="constant" val="" valType="code"/>
        <Param name="syncScreenRefresh" updates="None" val="True" valType="bool"/>
        <Param name="text" updates="constant" val="You have finished block 1/3. Feel free to take a short break.&amp;#10;&amp;#10;When you are ready to continue, press “c”." valType="extendedStr"/>
        <Param name="units" updates="None" val="from exp settings" valType="str"/>
        <Param name="wrapWidth" updates="constant" val="" valType="code"/>
      </TextComponent>
      <KeyboardComponent name="break_resp1">
        <Param name="allowedKeys" updates="constant" val="'c'" valType="code"/>
        <Param name="correctAns" updates="constant" val="" valType="str"/>
        <Param name="disabled" updates="None" val="False" valType="bool"/>
        <Param name="discard previous" updates="constant" val="True" valType="bool"/>
        <Param name="durationEstim" updates="None" val="" valType="code"/>
        <Param name="forceEndRoutine" updates="constant" val="True" valType="bool"/>
        <Param name="name" updates="None" val="break_resp1" valType="code"/>
        <Param name="saveStartStop" updates="None" val="True" valType="bool"/>
        <Param name="startEstim" updates="None" val="" valType="code"/>
        <Param name="startType" updates="None" val="time (s)" valType="str"/>
        <Param name="startVal" updates="None" val="0.0" valType="code"/>
        <Param name="stopType" updates="None" val="duration (s)" valType="str"/>
        <Param name="stopVal" updates="constant" val="" valType="code"/>
        <Param name="store" updates="constant" val="last key" valType="str"/>
        <Param name="storeCorrect" updates="constant" val="False" valType="bool"/>
        <Param name="syncScreenRefresh" updates="constant" val="True" valType="bool"/>
      </KeyboardComponent>
    </Routine>
    <Routine name="Break2">
      <TextComponent name="break_text2">
        <Param name="color" updates="constant" val="white" valType="str"/>
        <Param name="colorSpace" updates="constant" val="rgb" valType="str"/>
        <Param name="disabled" updates="None" val="False" valType="bool"/>
        <Param name="durationEstim" updates="None" val="" valType="code"/>
        <Param name="flip" updates="constant" val="" valType="str"/>
        <Param name="font" updates="constant" val="Arial" valType="str"/>
        <Param name="languageStyle" updates="None" val="LTR" valType="str"/>
        <Param name="letterHeight" updates="constant" val="0.035" valType="code"/>
        <Param name="name" updates="None" val="break_text2" valType="code"/>
        <Param name="opacity" updates="constant" val="1" valType="code"/>
        <Param name="ori" updates="constant" val="0" valType="code"/>
        <Param name="pos" updates="constant" val="(0, 0)" valType="code"/>
        <Param name="saveStartStop" updates="None" val="True" valType="bool"/>
        <Param name="startEstim" updates="None" val="" valType="code"/>
        <Param name="startType" updates="None" val="time (s)" valType="str"/>
        <Param name="startVal" updates="None" val="0.0" valType="code"/>
        <Param name="stopType" updates="None" val="duration (s)" valType="str"/>
        <Param name="stopVal" updates="constant" val="" valType="code"/>
        <Param name="syncScreenRefresh" updates="None" val="True" valType="bool"/>
        <Param name="text" updates="constant" val="You have finished block 2/3. Feel free to take a short break.&amp;#10;&amp;#10;When you are ready to continue, press “c”." valType="extendedStr"/>
        <Param name="units" updates="None" val="from exp settings" valType="str"/>
        <Param name="wrapWidth" updates="constant" val="" valType="code"/>
      </TextComponent>
      <KeyboardComponent name="break_resp2">
        <Param name="allowedKeys" updates="constant" val="'c'" valType="code"/>
        <Param name="correctAns" updates="constant" val="" valType="str"/>
        <Param name="disabled" updates="None" val="False" valType="bool"/>
        <Param name="discard previous" updates="constant" val="True" valType="bool"/>
        <Param name="durationEstim" updates="None" val="" valType="code"/>
        <Param name="forceEndRoutine" updates="constant" val="True" valType="bool"/>
        <Param name="name" updates="None" val="break_resp2" valType="code"/>
        <Param name="saveStartStop" updates="None" val="True" valType="bool"/>
        <Param name="startEstim" updates="None" val="" valType="code"/>
        <Param name="startType" updates="None" val="time (s)" valType="str"/>
        <Param name="startVal" updates="None" val="0.0" valType="code"/>
        <Param name="stopType" updates="None" val="duration (s)" valType="str"/>
        <Param name="stopVal" updates="constant" val="" valType="code"/>
        <Param name="store" updates="constant" val="last key" valType="str"/>
        <Param name="storeCorrect" updates="constant" val="False" valType="bool"/>
        <Param name="syncScreenRefresh" updates="constant" val="True" valType="bool"/>
      </KeyboardComponent>
    </Routine>
    <Routine name="Instructions">
      <TextComponent name="instruct_text1">
        <Param name="color" updates="constant" val="white" valType="str"/>
        <Param name="colorSpace" updates="constant" val="rgb" valType="str"/>
        <Param name="disabled" updates="None" val="False" valType="bool"/>
        <Param name="durationEstim" updates="None" val="" valType="code"/>
        <Param name="flip" updates="constant" val="" valType="str"/>
        <Param name="font" updates="constant" val="Arial" valType="str"/>
        <Param name="languageStyle" updates="None" val="LTR" valType="str"/>
        <Param name="letterHeight" updates="constant" val="0.05" valType="code"/>
        <Param name="name" updates="None" val="instruct_text1" valType="code"/>
        <Param name="opacity" updates="constant" val="1" valType="code"/>
        <Param name="ori" updates="constant" val="0" valType="code"/>
        <Param name="pos" updates="constant" val="(0, 0.15)" valType="code"/>
        <Param name="saveStartStop" updates="None" val="True" valType="bool"/>
        <Param name="startEstim" updates="None" val="" valType="code"/>
        <Param name="startType" updates="None" val="time (s)" valType="str"/>
        <Param name="startVal" updates="None" val="0.0" valType="code"/>
        <Param name="stopType" updates="None" val="duration (s)" valType="str"/>
        <Param name="stopVal" updates="constant" val="" valType="code"/>
        <Param name="syncScreenRefresh" updates="None" val="True" valType="bool"/>
        <Param name="text" updates="set every repeat" val="$Text" valType="extendedStr"/>
        <Param name="units" updates="None" val="from exp settings" valType="str"/>
        <Param name="wrapWidth" updates="constant" val="" valType="code"/>
      </TextComponent>
      <TextComponent name="instruct_text2">
        <Param name="color" updates="constant" val="white" valType="str"/>
        <Param name="colorSpace" updates="constant" val="rgb" valType="str"/>
        <Param name="disabled" updates="None" val="False" valType="bool"/>
        <Param name="durationEstim" updates="None" val="" valType="code"/>
        <Param name="flip" updates="constant" val="" valType="str"/>
        <Param name="font" updates="constant" val="Arial" valType="str"/>
        <Param name="languageStyle" updates="None" val="LTR" valType="str"/>
        <Param name="letterHeight" updates="constant" val="0.03" valType="code"/>
        <Param name="name" updates="None" val="instruct_text2" valType="code"/>
        <Param name="opacity" updates="constant" val="1" valType="code"/>
        <Param name="ori" updates="constant" val="0" valType="code"/>
        <Param name="pos" updates="constant" val="(0, -0.35)" valType="code"/>
        <Param name="saveStartStop" updates="None" val="True" valType="bool"/>
        <Param name="startEstim" updates="None" val="" valType="code"/>
        <Param name="startType" updates="None" val="time (s)" valType="str"/>
        <Param name="startVal" updates="None" val="0.0" valType="code"/>
        <Param name="stopType" updates="None" val="duration (s)" valType="str"/>
        <Param name="stopVal" updates="constant" val="" valType="code"/>
        <Param name="syncScreenRefresh" updates="None" val="True" valType="bool"/>
        <Param name="text" updates="constant" val="Press “enter” or “return” to continue." valType="extendedStr"/>
        <Param name="units" updates="None" val="from exp settings" valType="str"/>
        <Param name="wrapWidth" updates="constant" val="" valType="code"/>
      </TextComponent>
      <KeyboardComponent name="instruct_resp1">
        <Param name="allowedKeys" updates="constant" val="'return'" valType="code"/>
        <Param name="correctAns" updates="constant" val="" valType="str"/>
        <Param name="disabled" updates="None" val="False" valType="bool"/>
        <Param name="discard previous" updates="constant" val="True" valType="bool"/>
        <Param name="durationEstim" updates="None" val="" valType="code"/>
        <Param name="forceEndRoutine" updates="constant" val="True" valType="bool"/>
        <Param name="name" updates="None" val="instruct_resp1" valType="code"/>
        <Param name="saveStartStop" updates="None" val="True" valType="bool"/>
        <Param name="startEstim" updates="None" val="" valType="code"/>
        <Param name="startType" updates="None" val="time (s)" valType="str"/>
        <Param name="startVal" updates="None" val="0.0" valType="code"/>
        <Param name="stopType" updates="None" val="duration (s)" valType="str"/>
        <Param name="stopVal" updates="constant" val="" valType="code"/>
        <Param name="store" updates="constant" val="last key" valType="str"/>
        <Param name="storeCorrect" updates="constant" val="False" valType="bool"/>
        <Param name="syncScreenRefresh" updates="constant" val="True" valType="bool"/>
      </KeyboardComponent>
    </Routine>
  </Routines>
  <Flow>
    <Routine name="Welcome"/>
    <LoopInitiator loopType="TrialHandler" name="Instruction_loop">
      <Param name="Selected rows" updates="None" val="" valType="str"/>
      <Param name="conditions" updates="None" val="[OrderedDict([('Text', 'You will be presented with a series of images. It is your job to learn, through trial and error, whether the “Left” or “Right” arrow key should be pressed for each image.')]), OrderedDict([('Text', 'For some images you should always press “Left”, and for others you should always press “Right” arrow key.')]), OrderedDict([('Text', 'Some images are special, the correct response will the opposite of the preceding response. So, if you previously correctly responded “Left”, then the correct response would now be “Right”.')]), OrderedDict([('Text', 'After each response, you will be told whether you got the item correct or incorrect.')]), OrderedDict([('Text', 'You can take as long as you like on each image, but the task will not continue until you press “Left” or “Right” arrow key.')]), OrderedDict([('Text', 'This experiment will have three blocks, each block will take approximately 10 minutes to complete.')])]" valType="str"/>
      <Param name="conditionsFile" updates="None" val="instructions/Instructions.xlsx" valType="str"/>
      <Param name="endPoints" updates="None" val="[0, 1]" valType="num"/>
      <Param name="isTrials" updates="None" val="True" valType="bool"/>
      <Param name="loopType" updates="None" val="sequential" valType="str"/>
      <Param name="nReps" updates="None" val="1" valType="code"/>
      <Param name="name" updates="None" val="Instruction_loop" valType="code"/>
      <Param name="random seed" updates="None" val="" valType="code"/>
    </LoopInitiator>
    <Routine name="Instructions"/>
    <LoopTerminator name="Instruction_loop"/>
    <Routine name="Start1"/>
    <LoopInitiator loopType="TrialHandler" name="Block1_loop">
      <Param name="Selected rows" updates="None" val="" valType="str"/>
      <Param name="conditions" updates="None" val="[OrderedDict([('Block1Type', 'Fix1'), ('Block1Stim', '/Users/nmuncy/Projects/cal_abstract/stimuli/School/55.jpg'), ('Block1Corr', 'left')]), OrderedDict([('Block1Type', 'Fix1'), ('Block1Stim', '/Users/nmuncy/Projects/cal_abstract/stimuli/School/30.jpg'), ('Block1Corr', 'left')]), OrderedDict([('Block1Type', 'Cond'), ('Block1Stim', '/Users/nmuncy/Projects/cal_abstract/stimuli/Small/6.jpg'), ('Block1Corr', 'right')]), OrderedDict([('Block1Type', 'Fix2'), ('Block1Stim', '/Users/nmuncy/Projects/cal_abstract/stimuli/Dangerous/6.jpg'), ('Block1Corr', 'right')]), OrderedDict([('Block1Type', 'Fix2'), ('Block1Stim', '/Users/nmuncy/Projects/cal_abstract/stimuli/Dangerous/50.jpg'), ('Block1Corr', 'right')]), OrderedDict([('Block1Type', 'Cond'), ('Block1Stim', '/Users/nmuncy/Projects/cal_abstract/stimuli/Small/3.jpg'), ('Block1Corr', 'left')]), OrderedDict([('Block1Type', 'Cond'), ('Block1Stim', '/Users/nmuncy/Projects/cal_abstract/stimuli/Small/54.jpg'), ('Block1Corr', 'right')]), OrderedDict([('Block1Type', 'Fix2'), ('Block1Stim', '/Users/nmuncy/Projects/cal_abstract/stimuli/Dangerous/44.jpg'), ('Block1Corr', 'right')]), OrderedDict([('Block1Type', 'Fix2'), ('Block1Stim', '/Users/nmuncy/Projects/cal_abstract/stimuli/Dangerous/19.jpg'), ('Block1Corr', 'right')]), OrderedDict([('Block1Type', 'Fix1'), ('Block1Stim', '/Users/nmuncy/Projects/cal_abstract/stimuli/School/37.jpg'), ('Block1Corr', 'left')]), OrderedDict([('Block1Type', 'Cond'), ('Block1Stim', '/Users/nmuncy/Projects/cal_abstract/stimuli/Small/2.jpg'), ('Block1Corr', 'right')]), OrderedDict([('Block1Type', 'Cond'), ('Block1Stim', '/Users/nmuncy/Projects/cal_abstract/stimuli/Small/35.jpg'), ('Block1Corr', 'left')]), OrderedDict([('Block1Type', 'Fix1'), ('Block1Stim', '/Users/nmuncy/Projects/cal_abstract/stimuli/School/16.jpg'), ('Block1Corr', 'left')]), OrderedDict([('Block1Type', 'Fix1'), ('Block1Stim', '/Users/nmuncy/Projects/cal_abstract/stimuli/School/5.jpg'), ('Block1Corr', 'left')]), OrderedDict([('Block1Type', 'Fix2'), ('Block1Stim', '/Users/nmuncy/Projects/cal_abstract/stimuli/Dangerous/28.jpg'), ('Block1Corr', 'right')]), OrderedDict([('Block1Type', 'Cond'), ('Block1Stim', '/Users/nmuncy/Projects/cal_abstract/stimuli/Small/44.jpg'), ('Block1Corr', 'left')]), OrderedDict([('Block1Type', 'Fix2'), ('Block1Stim', '/Users/nmuncy/Projects/cal_abstract/stimuli/Dangerous/24.jpg'), ('Block1Corr', 'right')]), OrderedDict([('Block1Type', 'Fix1'), ('Block1Stim', '/Users/nmuncy/Projects/cal_abstract/stimuli/School/33.jpg'), ('Block1Corr', 'left')]), OrderedDict([('Block1Type', 'Fix2'), ('Block1Stim', '/Users/nmuncy/Projects/cal_abstract/stimuli/Dangerous/41.jpg'), ('Block1Corr', 'right')]), OrderedDict([('Block1Type', 'Fix1'), ('Block1Stim', '/Users/nmuncy/Projects/cal_abstract/stimuli/School/51.jpg'), ('Block1Corr', 'left')]), OrderedDict([('Block1Type', 'Fix2'), ('Block1Stim', '/Users/nmuncy/Projects/cal_abstract/stimuli/Dangerous/62.jpg'), ('Block1Corr', 'right')]), OrderedDict([('Block1Type', 'Cond'), ('Block1Stim', '/Users/nmuncy/Projects/cal_abstract/stimuli/Small/41.jpg'), ('Block1Corr', 'left')]), OrderedDict([('Block1Type', 'Fix2'), ('Block1Stim', '/Users/nmuncy/Projects/cal_abstract/stimuli/Dangerous/13.jpg'), ('Block1Corr', 'right')]), OrderedDict([('Block1Type', 'Fix2'), ('Block1Stim', '/Users/nmuncy/Projects/cal_abstract/stimuli/Dangerous/52.jpg'), ('Block1Corr', 'right')]), OrderedDict([('Block1Type', 'Cond'), ('Block1Stim', '/Users/nmuncy/Projects/cal_abstract/stimuli/Small/15.jpg'), ('Block1Corr', 'left')]), OrderedDict([('Block1Type', 'Cond'), ('Block1Stim', '/Users/nmuncy/Projects/cal_abstract/stimuli/Small/27.jpg'), ('Block1Corr', 'right')]), OrderedDict([('Block1Type', 'Cond'), ('Block1Stim', '/Users/nmuncy/Projects/cal_abstract/stimuli/Small/21.jpg'), ('Block1Corr', 'left')]), OrderedDict([('Block1Type', 'Cond'), ('Block1Stim', '/Users/nmuncy/Projects/cal_abstract/stimuli/Small/1.jpg'), ('Block1Corr', 'right')]), OrderedDict([('Block1Type', 'Fix2'), ('Block1Stim', '/Users/nmuncy/Projects/cal_abstract/stimuli/Dangerous/38.jpg'), ('Block1Corr', 'right')]), OrderedDict([('Block1Type', 'Fix2'), ('Block1Stim', '/Users/nmuncy/Projects/cal_abstract/stimuli/Dangerous/1.jpg'), ('Block1Corr', 'right')]), OrderedDict([('Block1Type', 'Fix1'), ('Block1Stim', '/Users/nmuncy/Projects/cal_abstract/stimuli/School/27.jpg'), ('Block1Corr', 'left')]), OrderedDict([('Block1Type', 'Fix1'), ('Block1Stim', '/Users/nmuncy/Projects/cal_abstract/stimuli/School/43.jpg'), ('Block1Corr', 'left')]), OrderedDict([('Block1Type', 'Fix1'), ('Block1Stim', '/Users/nmuncy/Projects/cal_abstract/stimuli/School/36.jpg'), ('Block1Corr', 'left')]), OrderedDict([('Block1Type', 'Cond'), ('Block1Stim', '/Users/nmuncy/Projects/cal_abstract/stimuli/Small/26.jpg'), ('Block1Corr', 'right')]), OrderedDict([('Block1Type', 'Fix1'), ('Block1Stim', '/Users/nmuncy/Projects/cal_abstract/stimuli/School/17.jpg'), ('Block1Corr', 'left')]), OrderedDict([('Block1Type', 'Cond'), ('Block1Stim', '/Users/nmuncy/Projects/cal_abstract/stimuli/Small/9.jpg'), ('Block1Corr', 'right')]), OrderedDict([('Block1Type', 'Cond'), ('Block1Stim', '/Users/nmuncy/Projects/cal_abstract/stimuli/Small/37.jpg'), ('Block1Corr', 'left')]), OrderedDict([('Block1Type', 'Fix2'), ('Block1Stim', '/Users/nmuncy/Projects/cal_abstract/stimuli/Dangerous/45.jpg'), ('Block1Corr', 'right')]), OrderedDict([('Block1Type', 'Fix1'), ('Block1Stim', '/Users/nmuncy/Projects/cal_abstract/stimuli/School/44.jpg'), ('Block1Corr', 'left')]), OrderedDict([('Block1Type', 'Cond'), ('Block1Stim', '/Users/nmuncy/Projects/cal_abstract/stimuli/Small/20.jpg'), ('Block1Corr', 'right')]), OrderedDict([('Block1Type', 'Cond'), ('Block1Stim', '/Users/nmuncy/Projects/cal_abstract/stimuli/Small/46.jpg'), ('Block1Corr', 'left')]), OrderedDict([('Block1Type', 'Fix2'), ('Block1Stim', '/Users/nmuncy/Projects/cal_abstract/stimuli/Dangerous/25.jpg'), ('Block1Corr', 'right')]), OrderedDict([('Block1Type', 'Cond'), ('Block1Stim', '/Users/nmuncy/Projects/cal_abstract/stimuli/Small/14.jpg'), ('Block1Corr', 'left')]), OrderedDict([('Block1Type', 'Fix2'), ('Block1Stim', '/Users/nmuncy/Projects/cal_abstract/stimuli/Dangerous/53.jpg'), ('Block1Corr', 'right')]), OrderedDict([('Block1Type', 'Fix1'), ('Block1Stim', '/Users/nmuncy/Projects/cal_abstract/stimuli/School/45.jpg'), ('Block1Corr', 'left')]), OrderedDict([('Block1Type', 'Fix1'), ('Block1Stim', '/Users/nmuncy/Projects/cal_abstract/stimuli/School/26.jpg'), ('Block1Corr', 'left')]), OrderedDict([('Block1Type', 'Cond'), ('Block1Stim', '/Users/nmuncy/Projects/cal_abstract/stimuli/Small/58.jpg'), ('Block1Corr', 'right')]), OrderedDict([('Block1Type', 'Cond'), ('Block1Stim', '/Users/nmuncy/Projects/cal_abstract/stimuli/Small/22.jpg'), ('Block1Corr', 'left')]), OrderedDict([('Block1Type', 'Fix2'), ('Block1Stim', '/Users/nmuncy/Projects/cal_abstract/stimuli/Dangerous/23.jpg'), ('Block1Corr', 'right')]), OrderedDict([('Block1Type', 'Cond'), ('Block1Stim', '/Users/nmuncy/Projects/cal_abstract/stimuli/Small/4.jpg'), ('Block1Corr', 'left')]), OrderedDict([('Block1Type', 'Cond'), ('Block1Stim', '/Users/nmuncy/Projects/cal_abstract/stimuli/Small/43.jpg'), ('Block1Corr', 'right')]), OrderedDict([('Block1Type', 'Fix1'), ('Block1Stim', '/Users/nmuncy/Projects/cal_abstract/stimuli/School/35.jpg'), ('Block1Corr', 'left')]), OrderedDict([('Block1Type', 'Fix1'), ('Block1Stim', '/Users/nmuncy/Projects/cal_abstract/stimuli/School/47.jpg'), ('Block1Corr', 'left')]), OrderedDict([('Block1Type', 'Fix1'), ('Block1Stim', '/Users/nmuncy/Projects/cal_abstract/stimuli/School/23.jpg'), ('Block1Corr', 'left')]), OrderedDict([('Block1Type', 'Fix1'), ('Block1Stim', '/Users/nmuncy/Projects/cal_abstract/stimuli/School/20.jpg'), ('Block1Corr', 'left')]), OrderedDict([('Block1Type', 'Fix1'), ('Block1Stim', '/Users/nmuncy/Projects/cal_abstract/stimuli/School/46.jpg'), ('Block1Corr', 'left')]), OrderedDict([('Block1Type', 'Fix2'), ('Block1Stim', '/Users/nmuncy/Projects/cal_abstract/stimuli/Dangerous/20.jpg'), ('Block1Corr', 'right')]), OrderedDict([('Block1Type', 'Fix2'), ('Block1Stim', '/Users/nmuncy/Projects/cal_abstract/stimuli/Dangerous/18.jpg'), ('Block1Corr', 'right')]), OrderedDict([('Block1Type', 'Cond'), ('Block1Stim', '/Users/nmuncy/Projects/cal_abstract/stimuli/Small/25.jpg'), ('Block1Corr', 'left')]), OrderedDict([('Block1Type', 'Fix1'), ('Block1Stim', '/Users/nmuncy/Projects/cal_abstract/stimuli/School/28.jpg'), ('Block1Corr', 'left')]), OrderedDict([('Block1Type', 'Fix1'), ('Block1Stim', '/Users/nmuncy/Projects/cal_abstract/stimuli/School/50.jpg'), ('Block1Corr', 'left')]), OrderedDict([('Block1Type', 'Cond'), ('Block1Stim', '/Users/nmuncy/Projects/cal_abstract/stimuli/Small/32.jpg'), ('Block1Corr', 'right')]), OrderedDict([('Block1Type', 'Cond'), ('Block1Stim', '/Users/nmuncy/Projects/cal_abstract/stimuli/Small/7.jpg'), ('Block1Corr', 'left')]), OrderedDict([('Block1Type', 'Cond'), ('Block1Stim', '/Users/nmuncy/Projects/cal_abstract/stimuli/Small/12.jpg'), ('Block1Corr', 'right')]), OrderedDict([('Block1Type', 'Cond'), ('Block1Stim', '/Users/nmuncy/Projects/cal_abstract/stimuli/Small/42.jpg'), ('Block1Corr', 'left')]), OrderedDict([('Block1Type', 'Fix2'), ('Block1Stim', '/Users/nmuncy/Projects/cal_abstract/stimuli/Dangerous/31.jpg'), ('Block1Corr', 'right')]), OrderedDict([('Block1Type', 'Cond'), ('Block1Stim', '/Users/nmuncy/Projects/cal_abstract/stimuli/Small/5.jpg'), ('Block1Corr', 'left')]), OrderedDict([('Block1Type', 'Cond'), ('Block1Stim', '/Users/nmuncy/Projects/cal_abstract/stimuli/Small/33.jpg'), ('Block1Corr', 'right')]), OrderedDict([('Block1Type', 'Fix1'), ('Block1Stim', '/Users/nmuncy/Projects/cal_abstract/stimuli/School/31.jpg'), ('Block1Corr', 'left')]), OrderedDict([('Block1Type', 'Cond'), ('Block1Stim', '/Users/nmuncy/Projects/cal_abstract/stimuli/Small/36.jpg'), ('Block1Corr', 'right')]), OrderedDict([('Block1Type', 'Fix1'), ('Block1Stim', '/Users/nmuncy/Projects/cal_abstract/stimuli/School/39.jpg'), ('Block1Corr', 'left')]), OrderedDict([('Block1Type', 'Fix2'), ('Block1Stim', '/Users/nmuncy/Projects/cal_abstract/stimuli/Dangerous/27.jpg'), ('Block1Corr', 'right')]), OrderedDict([('Block1Type', 'Fix2'), ('Block1Stim', '/Users/nmuncy/Projects/cal_abstract/stimuli/Dangerous/7.jpg'), ('Block1Corr', 'right')]), OrderedDict([('Block1Type', 'Fix1'), ('Block1Stim', '/Users/nmuncy/Projects/cal_abstract/stimuli/School/59.jpg'), ('Block1Corr', 'left')]), OrderedDict([('Block1Type', 'Fix1'), ('Block1Stim', '/Users/nmuncy/Projects/cal_abstract/stimuli/School/18.jpg'), ('Block1Corr', 'left')]), OrderedDict([('Block1Type', 'Fix1'), ('Block1Stim', '/Users/nmuncy/Projects/cal_abstract/stimuli/School/4.jpg'), ('Block1Corr', 'left')]), OrderedDict([('Block1Type', 'Fix1'), ('Block1Stim', '/Users/nmuncy/Projects/cal_abstract/stimuli/School/10.jpg'), ('Block1Corr', 'left')]), OrderedDict([('Block1Type', 'Fix2'), ('Block1Stim', '/Users/nmuncy/Projects/cal_abstract/stimuli/Dangerous/8.jpg'), ('Block1Corr', 'right')]), OrderedDict([('Block1Type', 'Fix1'), ('Block1Stim', '/Users/nmuncy/Projects/cal_abstract/stimuli/School/24.jpg'), ('Block1Corr', 'left')]), OrderedDict([('Block1Type', 'Fix2'), ('Block1Stim', '/Users/nmuncy/Projects/cal_abstract/stimuli/Dangerous/35.jpg'), ('Block1Corr', 'right')]), OrderedDict([('Block1Type', 'Fix2'), ('Block1Stim', '/Users/nmuncy/Projects/cal_abstract/stimuli/Dangerous/16.jpg'), ('Block1Corr', 'right')]), OrderedDict([('Block1Type', 'Fix2'), ('Block1Stim', '/Users/nmuncy/Projects/cal_abstract/stimuli/Dangerous/3.jpg'), ('Block1Corr', 'right')]), OrderedDict([('Block1Type', 'Fix1'), ('Block1Stim', '/Users/nmuncy/Projects/cal_abstract/stimuli/School/2.jpg'), ('Block1Corr', 'left')]), OrderedDict([('Block1Type', 'Fix2'), ('Block1Stim', '/Users/nmuncy/Projects/cal_abstract/stimuli/Dangerous/46.jpg'), ('Block1Corr', 'right')]), OrderedDict([('Block1Type', 'Fix1'), ('Block1Stim', '/Users/nmuncy/Projects/cal_abstract/stimuli/School/34.jpg'), ('Block1Corr', 'left')]), OrderedDict([('Block1Type', 'Fix2'), ('Block1Stim', '/Users/nmuncy/Projects/cal_abstract/stimuli/Dangerous/4.jpg'), ('Block1Corr', 'right')]), OrderedDict([('Block1Type', 'Fix2'), ('Block1Stim', '/Users/nmuncy/Projects/cal_abstract/stimuli/Dangerous/5.jpg'), ('Block1Corr', 'right')]), OrderedDict([('Block1Type', 'Cond'), ('Block1Stim', '/Users/nmuncy/Projects/cal_abstract/stimuli/Small/39.jpg'), ('Block1Corr', 'left')]), OrderedDict([('Block1Type', 'Cond'), ('Block1Stim', '/Users/nmuncy/Projects/cal_abstract/stimuli/Small/13.jpg'), ('Block1Corr', 'right')]), OrderedDict([('Block1Type', 'Fix1'), ('Block1Stim', '/Users/nmuncy/Projects/cal_abstract/stimuli/School/54.jpg'), ('Block1Corr', 'left')]), OrderedDict([('Block1Type', 'Fix2'), ('Block1Stim', '/Users/nmuncy/Projects/cal_abstract/stimuli/Dangerous/57.jpg'), ('Block1Corr', 'right')]), OrderedDict([('Block1Type', 'Fix1'), ('Block1Stim', '/Users/nmuncy/Projects/cal_abstract/stimuli/School/0.jpg'), ('Block1Corr', 'left')]), OrderedDict([('Block1Type', 'Cond'), ('Block1Stim', '/Users/nmuncy/Projects/cal_abstract/stimuli/Small/24.jpg'), ('Block1Corr', 'right')]), OrderedDict([('Block1Type', 'Fix1'), ('Block1Stim', '/Users/nmuncy/Projects/cal_abstract/stimuli/School/29.jpg'), ('Block1Corr', 'left')]), OrderedDict([('Block1Type', 'Fix1'), ('Block1Stim', '/Users/nmuncy/Projects/cal_abstract/stimuli/School/12.jpg'), ('Block1Corr', 'left')]), OrderedDict([('Block1Type', 'Fix2'), ('Block1Stim', '/Users/nmuncy/Projects/cal_abstract/stimuli/Dangerous/47.jpg'), ('Block1Corr', 'right')]), OrderedDict([('Block1Type', 'Fix1'), ('Block1Stim', '/Users/nmuncy/Projects/cal_abstract/stimuli/School/21.jpg'), ('Block1Corr', 'left')]), OrderedDict([('Block1Type', 'Fix1'), ('Block1Stim', '/Users/nmuncy/Projects/cal_abstract/stimuli/School/9.jpg'), ('Block1Corr', 'left')]), OrderedDict([('Block1Type', 'Cond'), ('Block1Stim', '/Users/nmuncy/Projects/cal_abstract/stimuli/Small/57.jpg'), ('Block1Corr', 'right')]), OrderedDict([('Block1Type', 'Cond'), ('Block1Stim', '/Users/nmuncy/Projects/cal_abstract/stimuli/Small/56.jpg'), ('Block1Corr', 'left')]), OrderedDict([('Block1Type', 'Cond'), ('Block1Stim', '/Users/nmuncy/Projects/cal_abstract/stimuli/Small/31.jpg'), ('Block1Corr', 'right')]), OrderedDict([('Block1Type', 'Fix1'), ('Block1Stim', '/Users/nmuncy/Projects/cal_abstract/stimuli/School/41.jpg'), ('Block1Corr', 'left')]), OrderedDict([('Block1Type', 'Fix2'), ('Block1Stim', '/Users/nmuncy/Projects/cal_abstract/stimuli/Dangerous/30.jpg'), ('Block1Corr', 'right')]), OrderedDict([('Block1Type', 'Fix2'), ('Block1Stim', '/Users/nmuncy/Projects/cal_abstract/stimuli/Dangerous/17.jpg'), ('Block1Corr', 'right')]), OrderedDict([('Block1Type', 'Cond'), ('Block1Stim', '/Users/nmuncy/Projects/cal_abstract/stimuli/Small/19.jpg'), ('Block1Corr', 'left')]), OrderedDict([('Block1Type', 'Fix1'), ('Block1Stim', '/Users/nmuncy/Projects/cal_abstract/stimuli/School/1.jpg'), ('Block1Corr', 'left')]), OrderedDict([('Block1Type', 'Cond'), ('Block1Stim', '/Users/nmuncy/Projects/cal_abstract/stimuli/Small/11.jpg'), ('Block1Corr', 'right')]), OrderedDict([('Block1Type', 'Fix2'), ('Block1Stim', '/Users/nmuncy/Projects/cal_abstract/stimuli/Dangerous/9.jpg'), ('Block1Corr', 'right')]), OrderedDict([('Block1Type', 'Fix2'), ('Block1Stim', '/Users/nmuncy/Projects/cal_abstract/stimuli/Dangerous/51.jpg'), ('Block1Corr', 'right')]), OrderedDict([('Block1Type', 'Cond'), ('Block1Stim', '/Users/nmuncy/Projects/cal_abstract/stimuli/Small/28.jpg'), ('Block1Corr', 'left')]), OrderedDict([('Block1Type', 'Cond'), ('Block1Stim', '/Users/nmuncy/Projects/cal_abstract/stimuli/Small/59.jpg'), ('Block1Corr', 'right')]), OrderedDict([('Block1Type', 'Cond'), ('Block1Stim', '/Users/nmuncy/Projects/cal_abstract/stimuli/Small/18.jpg'), ('Block1Corr', 'left')]), OrderedDict([('Block1Type', 'Cond'), ('Block1Stim', '/Users/nmuncy/Projects/cal_abstract/stimuli/Small/8.jpg'), ('Block1Corr', 'right')]), OrderedDict([('Block1Type', 'Fix2'), ('Block1Stim', '/Users/nmuncy/Projects/cal_abstract/stimuli/Dangerous/37.jpg'), ('Block1Corr', 'right')]), OrderedDict([('Block1Type', 'Fix1'), ('Block1Stim', '/Users/nmuncy/Projects/cal_abstract/stimuli/School/42.jpg'), ('Block1Corr', 'left')]), OrderedDict([('Block1Type', 'Fix1'), ('Block1Stim', '/Users/nmuncy/Projects/cal_abstract/stimuli/School/8.jpg'), ('Block1Corr', 'left')]), OrderedDict([('Block1Type', 'Fix1'), ('Block1Stim', '/Users/nmuncy/Projects/cal_abstract/stimuli/School/22.jpg'), ('Block1Corr', 'left')]), OrderedDict([('Block1Type', 'Cond'), ('Block1Stim', '/Users/nmuncy/Projects/cal_abstract/stimuli/Small/52.jpg'), ('Block1Corr', 'right')]), OrderedDict([('Block1Type', 'Fix2'), ('Block1Stim', '/Users/nmuncy/Projects/cal_abstract/stimuli/Dangerous/54.jpg'), ('Block1Corr', 'right')]), OrderedDict([('Block1Type', 'Fix2'), ('Block1Stim', '/Users/nmuncy/Projects/cal_abstract/stimuli/Dangerous/39.jpg'), ('Block1Corr', 'right')]), OrderedDict([('Block1Type', 'Fix1'), ('Block1Stim', '/Users/nmuncy/Projects/cal_abstract/stimuli/School/19.jpg'), ('Block1Corr', 'left')]), OrderedDict([('Block1Type', 'Fix2'), ('Block1Stim', '/Users/nmuncy/Projects/cal_abstract/stimuli/Dangerous/55.jpg'), ('Block1Corr', 'right')]), OrderedDict([('Block1Type', 'Fix2'), ('Block1Stim', '/Users/nmuncy/Projects/cal_abstract/stimuli/Dangerous/22.jpg'), ('Block1Corr', 'right')]), OrderedDict([('Block1Type', 'Fix2'), ('Block1Stim', '/Users/nmuncy/Projects/cal_abstract/stimuli/Dangerous/34.jpg'), ('Block1Corr', 'right')]), OrderedDict([('Block1Type', 'Fix2'), ('Block1Stim', '/Users/nmuncy/Projects/cal_abstract/stimuli/Dangerous/12.jpg'), ('Block1Corr', 'right')]), OrderedDict([('Block1Type', 'Fix1'), ('Block1Stim', '/Users/nmuncy/Projects/cal_abstract/stimuli/School/38.jpg'), ('Block1Corr', 'left')]), OrderedDict([('Block1Type', 'Fix2'), ('Block1Stim', '/Users/nmuncy/Projects/cal_abstract/stimuli/Dangerous/58.jpg'), ('Block1Corr', 'right')]), OrderedDict([('Block1Type', 'Cond'), ('Block1Stim', '/Users/nmuncy/Projects/cal_abstract/stimuli/Small/51.jpg'), ('Block1Corr', 'left')]), OrderedDict([('Block1Type', 'Fix1'), ('Block1Stim', '/Users/nmuncy/Projects/cal_abstract/stimuli/School/13.jpg'), ('Block1Corr', 'left')]), OrderedDict([('Block1Type', 'Fix1'), ('Block1Stim', '/Users/nmuncy/Projects/cal_abstract/stimuli/School/15.jpg'), ('Block1Corr', 'left')]), OrderedDict([('Block1Type', 'Fix2'), ('Block1Stim', '/Users/nmuncy/Projects/cal_abstract/stimuli/Dangerous/11.jpg'), ('Block1Corr', 'right')]), OrderedDict([('Block1Type', 'Fix2'), ('Block1Stim', '/Users/nmuncy/Projects/cal_abstract/stimuli/Dangerous/49.jpg'), ('Block1Corr', 'right')]), OrderedDict([('Block1Type', 'Cond'), ('Block1Stim', '/Users/nmuncy/Projects/cal_abstract/stimuli/Small/47.jpg'), ('Block1Corr', 'left')]), OrderedDict([('Block1Type', 'Cond'), ('Block1Stim', '/Users/nmuncy/Projects/cal_abstract/stimuli/Small/10.jpg'), ('Block1Corr', 'right')]), OrderedDict([('Block1Type', 'Fix1'), ('Block1Stim', '/Users/nmuncy/Projects/cal_abstract/stimuli/School/52.jpg'), ('Block1Corr', 'left')]), OrderedDict([('Block1Type', 'Cond'), ('Block1Stim', '/Users/nmuncy/Projects/cal_abstract/stimuli/Small/23.jpg'), ('Block1Corr', 'right')]), OrderedDict([('Block1Type', 'Cond'), ('Block1Stim', '/Users/nmuncy/Projects/cal_abstract/stimuli/Small/34.jpg'), ('Block1Corr', 'left')]), OrderedDict([('Block1Type', 'Fix1'), ('Block1Stim', '/Users/nmuncy/Projects/cal_abstract/stimuli/School/32.jpg'), ('Block1Corr', 'left')]), OrderedDict([('Block1Type', 'Cond'), ('Block1Stim', '/Users/nmuncy/Projects/cal_abstract/stimuli/Small/45.jpg'), ('Block1Corr', 'right')]), OrderedDict([('Block1Type', 'Fix2'), ('Block1Stim', '/Users/nmuncy/Projects/cal_abstract/stimuli/Dangerous/0.jpg'), ('Block1Corr', 'right')]), OrderedDict([('Block1Type', 'Fix2'), ('Block1Stim', '/Users/nmuncy/Projects/cal_abstract/stimuli/Dangerous/21.jpg'), ('Block1Corr', 'right')]), OrderedDict([('Block1Type', 'Fix2'), ('Block1Stim', '/Users/nmuncy/Projects/cal_abstract/stimuli/Dangerous/60.jpg'), ('Block1Corr', 'right')]), OrderedDict([('Block1Type', 'Cond'), ('Block1Stim', '/Users/nmuncy/Projects/cal_abstract/stimuli/Small/29.jpg'), ('Block1Corr', 'left')]), OrderedDict([('Block1Type', 'Fix1'), ('Block1Stim', '/Users/nmuncy/Projects/cal_abstract/stimuli/School/48.jpg'), ('Block1Corr', 'left')]), OrderedDict([('Block1Type', 'Fix1'), ('Block1Stim', '/Users/nmuncy/Projects/cal_abstract/stimuli/School/57.jpg'), ('Block1Corr', 'left')]), OrderedDict([('Block1Type', 'Fix2'), ('Block1Stim', '/Users/nmuncy/Projects/cal_abstract/stimuli/Dangerous/56.jpg'), ('Block1Corr', 'right')]), OrderedDict([('Block1Type', 'Fix1'), ('Block1Stim', '/Users/nmuncy/Projects/cal_abstract/stimuli/School/49.jpg'), ('Block1Corr', 'left')]), OrderedDict([('Block1Type', 'Fix2'), ('Block1Stim', '/Users/nmuncy/Projects/cal_abstract/stimuli/Dangerous/43.jpg'), ('Block1Corr', 'right')]), OrderedDict([('Block1Type', 'Cond'), ('Block1Stim', '/Users/nmuncy/Projects/cal_abstract/stimuli/Small/16.jpg'), ('Block1Corr', 'left')]), OrderedDict([('Block1Type', 'Fix2'), ('Block1Stim', '/Users/nmuncy/Projects/cal_abstract/stimuli/Dangerous/29.jpg'), ('Block1Corr', 'right')])]" valType="str"/>
      <Param name="conditionsFile" updates="None" val="blocks/Block1.csv" valType="str"/>
      <Param name="endPoints" updates="None" val="[0, 1]" valType="num"/>
      <Param name="isTrials" updates="None" val="True" valType="bool"/>
      <Param name="loopType" updates="None" val="sequential" valType="str"/>
      <Param name="nReps" updates="None" val="1" valType="code"/>
      <Param name="name" updates="None" val="Block1_loop" valType="code"/>
      <Param name="random seed" updates="None" val="" valType="code"/>
    </LoopInitiator>
    <Routine name="Block1"/>
    <Routine name="Feedback1"/>
    <LoopTerminator name="Block1_loop"/>
    <Routine name="Break1"/>
    <Routine name="Start2"/>
    <LoopInitiator loopType="TrialHandler" name="Block2_loop">
      <Param name="Selected rows" updates="None" val="" valType="str"/>
      <Param name="conditions" updates="None" val="[OrderedDict([('Block2Type', 'Fix1'), ('Block2Stim', '/Users/nmuncy/Projects/cal_abstract/stimuli/Old/23.jpg'), ('Block2Corr', 'right')]), OrderedDict([('Block2Type', 'Cond'), ('Block2Stim', '/Users/nmuncy/Projects/cal_abstract/stimuli/Wealth/0.jpg'), ('Block2Corr', 'left')]), OrderedDict([('Block2Type', 'Fix1'), ('Block2Stim', '/Users/nmuncy/Projects/cal_abstract/stimuli/Old/17.jpg'), ('Block2Corr', 'right')]), OrderedDict([('Block2Type', 'Fix2'), ('Block2Stim', '/Users/nmuncy/Projects/cal_abstract/stimuli/Healthy/38.jpg'), ('Block2Corr', 'left')]), OrderedDict([('Block2Type', 'Fix2'), ('Block2Stim', '/Users/nmuncy/Projects/cal_abstract/stimuli/Healthy/58.jpg'), ('Block2Corr', 'left')]), OrderedDict([('Block2Type', 'Fix2'), ('Block2Stim', '/Users/nmuncy/Projects/cal_abstract/stimuli/Healthy/57.jpg'), ('Block2Corr', 'left')]), OrderedDict([('Block2Type', 'Fix2'), ('Block2Stim', '/Users/nmuncy/Projects/cal_abstract/stimuli/Healthy/28.jpg'), ('Block2Corr', 'left')]), OrderedDict([('Block2Type', 'Cond'), ('Block2Stim', '/Users/nmuncy/Projects/cal_abstract/stimuli/Wealth/37.jpg'), ('Block2Corr', 'right')]), OrderedDict([('Block2Type', 'Cond'), ('Block2Stim', '/Users/nmuncy/Projects/cal_abstract/stimuli/Wealth/50.jpg'), ('Block2Corr', 'left')]), OrderedDict([('Block2Type', 'Cond'), ('Block2Stim', '/Users/nmuncy/Projects/cal_abstract/stimuli/Wealth/21.jpg'), ('Block2Corr', 'right')]), OrderedDict([('Block2Type', 'Cond'), ('Block2Stim', '/Users/nmuncy/Projects/cal_abstract/stimuli/Wealth/47.jpg'), ('Block2Corr', 'left')]), OrderedDict([('Block2Type', 'Cond'), ('Block2Stim', '/Users/nmuncy/Projects/cal_abstract/stimuli/Wealth/16.jpg'), ('Block2Corr', 'right')]), OrderedDict([('Block2Type', 'Fix1'), ('Block2Stim', '/Users/nmuncy/Projects/cal_abstract/stimuli/Old/50.jpg'), ('Block2Corr', 'right')]), OrderedDict([('Block2Type', 'Cond'), ('Block2Stim', '/Users/nmuncy/Projects/cal_abstract/stimuli/Wealth/19.jpg'), ('Block2Corr', 'left')]), OrderedDict([('Block2Type', 'Fix1'), ('Block2Stim', '/Users/nmuncy/Projects/cal_abstract/stimuli/Old/19.jpg'), ('Block2Corr', 'right')]), OrderedDict([('Block2Type', 'Cond'), ('Block2Stim', '/Users/nmuncy/Projects/cal_abstract/stimuli/Wealth/24.jpg'), ('Block2Corr', 'left')]), OrderedDict([('Block2Type', 'Fix2'), ('Block2Stim', '/Users/nmuncy/Projects/cal_abstract/stimuli/Healthy/10.jpg'), ('Block2Corr', 'left')]), OrderedDict([('Block2Type', 'Fix2'), ('Block2Stim', '/Users/nmuncy/Projects/cal_abstract/stimuli/Healthy/7.jpg'), ('Block2Corr', 'left')]), OrderedDict([('Block2Type', 'Fix1'), ('Block2Stim', '/Users/nmuncy/Projects/cal_abstract/stimuli/Old/28.jpg'), ('Block2Corr', 'right')]), OrderedDict([('Block2Type', 'Fix1'), ('Block2Stim', '/Users/nmuncy/Projects/cal_abstract/stimuli/Old/56.jpg'), ('Block2Corr', 'right')]), OrderedDict([('Block2Type', 'Fix1'), ('Block2Stim', '/Users/nmuncy/Projects/cal_abstract/stimuli/Old/46.jpg'), ('Block2Corr', 'right')]), OrderedDict([('Block2Type', 'Fix1'), ('Block2Stim', '/Users/nmuncy/Projects/cal_abstract/stimuli/Old/58.jpg'), ('Block2Corr', 'right')]), OrderedDict([('Block2Type', 'Fix1'), ('Block2Stim', '/Users/nmuncy/Projects/cal_abstract/stimuli/Old/2.jpg'), ('Block2Corr', 'right')]), OrderedDict([('Block2Type', 'Fix1'), ('Block2Stim', '/Users/nmuncy/Projects/cal_abstract/stimuli/Old/13.jpg'), ('Block2Corr', 'right')]), OrderedDict([('Block2Type', 'Cond'), ('Block2Stim', '/Users/nmuncy/Projects/cal_abstract/stimuli/Wealth/40.jpg'), ('Block2Corr', 'left')]), OrderedDict([('Block2Type', 'Cond'), ('Block2Stim', '/Users/nmuncy/Projects/cal_abstract/stimuli/Wealth/27.jpg'), ('Block2Corr', 'right')]), OrderedDict([('Block2Type', 'Fix2'), ('Block2Stim', '/Users/nmuncy/Projects/cal_abstract/stimuli/Healthy/53.jpg'), ('Block2Corr', 'left')]), OrderedDict([('Block2Type', 'Cond'), ('Block2Stim', '/Users/nmuncy/Projects/cal_abstract/stimuli/Wealth/31.jpg'), ('Block2Corr', 'right')]), OrderedDict([('Block2Type', 'Cond'), ('Block2Stim', '/Users/nmuncy/Projects/cal_abstract/stimuli/Wealth/18.jpg'), ('Block2Corr', 'left')]), OrderedDict([('Block2Type', 'Cond'), ('Block2Stim', '/Users/nmuncy/Projects/cal_abstract/stimuli/Wealth/55.jpg'), ('Block2Corr', 'right')]), OrderedDict([('Block2Type', 'Fix1'), ('Block2Stim', '/Users/nmuncy/Projects/cal_abstract/stimuli/Old/15.jpg'), ('Block2Corr', 'right')]), OrderedDict([('Block2Type', 'Fix2'), ('Block2Stim', '/Users/nmuncy/Projects/cal_abstract/stimuli/Healthy/26.jpg'), ('Block2Corr', 'left')]), OrderedDict([('Block2Type', 'Fix2'), ('Block2Stim', '/Users/nmuncy/Projects/cal_abstract/stimuli/Healthy/62.jpg'), ('Block2Corr', 'left')]), OrderedDict([('Block2Type', 'Fix1'), ('Block2Stim', '/Users/nmuncy/Projects/cal_abstract/stimuli/Old/4.jpg'), ('Block2Corr', 'right')]), OrderedDict([('Block2Type', 'Fix1'), ('Block2Stim', '/Users/nmuncy/Projects/cal_abstract/stimuli/Old/21.jpg'), ('Block2Corr', 'right')]), OrderedDict([('Block2Type', 'Cond'), ('Block2Stim', '/Users/nmuncy/Projects/cal_abstract/stimuli/Wealth/39.jpg'), ('Block2Corr', 'left')]), OrderedDict([('Block2Type', 'Cond'), ('Block2Stim', '/Users/nmuncy/Projects/cal_abstract/stimuli/Wealth/29.jpg'), ('Block2Corr', 'right')]), OrderedDict([('Block2Type', 'Cond'), ('Block2Stim', '/Users/nmuncy/Projects/cal_abstract/stimuli/Wealth/57.jpg'), ('Block2Corr', 'left')]), OrderedDict([('Block2Type', 'Fix2'), ('Block2Stim', '/Users/nmuncy/Projects/cal_abstract/stimuli/Healthy/29.jpg'), ('Block2Corr', 'left')]), OrderedDict([('Block2Type', 'Fix1'), ('Block2Stim', '/Users/nmuncy/Projects/cal_abstract/stimuli/Old/25.jpg'), ('Block2Corr', 'right')]), OrderedDict([('Block2Type', 'Fix2'), ('Block2Stim', '/Users/nmuncy/Projects/cal_abstract/stimuli/Healthy/13.jpg'), ('Block2Corr', 'left')]), OrderedDict([('Block2Type', 'Fix2'), ('Block2Stim', '/Users/nmuncy/Projects/cal_abstract/stimuli/Healthy/41.jpg'), ('Block2Corr', 'left')]), OrderedDict([('Block2Type', 'Fix2'), ('Block2Stim', '/Users/nmuncy/Projects/cal_abstract/stimuli/Healthy/34.jpg'), ('Block2Corr', 'left')]), OrderedDict([('Block2Type', 'Fix2'), ('Block2Stim', '/Users/nmuncy/Projects/cal_abstract/stimuli/Healthy/63.jpg'), ('Block2Corr', 'left')]), OrderedDict([('Block2Type', 'Fix2'), ('Block2Stim', '/Users/nmuncy/Projects/cal_abstract/stimuli/Healthy/33.jpg'), ('Block2Corr', 'left')]), OrderedDict([('Block2Type', 'Fix2'), ('Block2Stim', '/Users/nmuncy/Projects/cal_abstract/stimuli/Healthy/48.jpg'), ('Block2Corr', 'left')]), OrderedDict([('Block2Type', 'Fix2'), ('Block2Stim', '/Users/nmuncy/Projects/cal_abstract/stimuli/Healthy/67.jpg'), ('Block2Corr', 'left')]), OrderedDict([('Block2Type', 'Fix2'), ('Block2Stim', '/Users/nmuncy/Projects/cal_abstract/stimuli/Healthy/60.jpg'), ('Block2Corr', 'left')]), OrderedDict([('Block2Type', 'Fix1'), ('Block2Stim', '/Users/nmuncy/Projects/cal_abstract/stimuli/Old/26.jpg'), ('Block2Corr', 'right')]), OrderedDict([('Block2Type', 'Cond'), ('Block2Stim', '/Users/nmuncy/Projects/cal_abstract/stimuli/Wealth/25.jpg'), ('Block2Corr', 'left')]), OrderedDict([('Block2Type', 'Fix2'), ('Block2Stim', '/Users/nmuncy/Projects/cal_abstract/stimuli/Healthy/46.jpg'), ('Block2Corr', 'left')]), OrderedDict([('Block2Type', 'Fix1'), ('Block2Stim', '/Users/nmuncy/Projects/cal_abstract/stimuli/Old/30.jpg'), ('Block2Corr', 'right')]), OrderedDict([('Block2Type', 'Cond'), ('Block2Stim', '/Users/nmuncy/Projects/cal_abstract/stimuli/Wealth/33.jpg'), ('Block2Corr', 'left')]), OrderedDict([('Block2Type', 'Fix1'), ('Block2Stim', '/Users/nmuncy/Projects/cal_abstract/stimuli/Old/55.jpg'), ('Block2Corr', 'right')]), OrderedDict([('Block2Type', 'Fix2'), ('Block2Stim', '/Users/nmuncy/Projects/cal_abstract/stimuli/Healthy/64.jpg'), ('Block2Corr', 'left')]), OrderedDict([('Block2Type', 'Fix1'), ('Block2Stim', '/Users/nmuncy/Projects/cal_abstract/stimuli/Old/9.jpg'), ('Block2Corr', 'right')]), OrderedDict([('Block2Type', 'Fix1'), ('Block2Stim', '/Users/nmuncy/Projects/cal_abstract/stimuli/Old/10.jpg'), ('Block2Corr', 'right')]), OrderedDict([('Block2Type', 'Fix2'), ('Block2Stim', '/Users/nmuncy/Projects/cal_abstract/stimuli/Healthy/37.jpg'), ('Block2Corr', 'left')]), OrderedDict([('Block2Type', 'Fix2'), ('Block2Stim', '/Users/nmuncy/Projects/cal_abstract/stimuli/Healthy/25.jpg'), ('Block2Corr', 'left')]), OrderedDict([('Block2Type', 'Fix2'), ('Block2Stim', '/Users/nmuncy/Projects/cal_abstract/stimuli/Healthy/51.jpg'), ('Block2Corr', 'left')]), OrderedDict([('Block2Type', 'Cond'), ('Block2Stim', '/Users/nmuncy/Projects/cal_abstract/stimuli/Wealth/23.jpg'), ('Block2Corr', 'right')]), OrderedDict([('Block2Type', 'Cond'), ('Block2Stim', '/Users/nmuncy/Projects/cal_abstract/stimuli/Wealth/35.jpg'), ('Block2Corr', 'left')]), OrderedDict([('Block2Type', 'Cond'), ('Block2Stim', '/Users/nmuncy/Projects/cal_abstract/stimuli/Wealth/5.jpg'), ('Block2Corr', 'right')]), OrderedDict([('Block2Type', 'Cond'), ('Block2Stim', '/Users/nmuncy/Projects/cal_abstract/stimuli/Wealth/44.jpg'), ('Block2Corr', 'left')]), OrderedDict([('Block2Type', 'Cond'), ('Block2Stim', '/Users/nmuncy/Projects/cal_abstract/stimuli/Wealth/51.jpg'), ('Block2Corr', 'right')]), OrderedDict([('Block2Type', 'Fix1'), ('Block2Stim', '/Users/nmuncy/Projects/cal_abstract/stimuli/Old/3.jpg'), ('Block2Corr', 'right')]), OrderedDict([('Block2Type', 'Fix1'), ('Block2Stim', '/Users/nmuncy/Projects/cal_abstract/stimuli/Old/11.jpg'), ('Block2Corr', 'right')]), OrderedDict([('Block2Type', 'Fix2'), ('Block2Stim', '/Users/nmuncy/Projects/cal_abstract/stimuli/Healthy/1.jpg'), ('Block2Corr', 'left')]), OrderedDict([('Block2Type', 'Fix1'), ('Block2Stim', '/Users/nmuncy/Projects/cal_abstract/stimuli/Old/12.jpg'), ('Block2Corr', 'right')]), OrderedDict([('Block2Type', 'Fix1'), ('Block2Stim', '/Users/nmuncy/Projects/cal_abstract/stimuli/Old/53.jpg'), ('Block2Corr', 'right')]), OrderedDict([('Block2Type', 'Cond'), ('Block2Stim', '/Users/nmuncy/Projects/cal_abstract/stimuli/Wealth/48.jpg'), ('Block2Corr', 'left')]), OrderedDict([('Block2Type', 'Cond'), ('Block2Stim', '/Users/nmuncy/Projects/cal_abstract/stimuli/Wealth/10.jpg'), ('Block2Corr', 'right')]), OrderedDict([('Block2Type', 'Fix1'), ('Block2Stim', '/Users/nmuncy/Projects/cal_abstract/stimuli/Old/39.jpg'), ('Block2Corr', 'right')]), OrderedDict([('Block2Type', 'Fix1'), ('Block2Stim', '/Users/nmuncy/Projects/cal_abstract/stimuli/Old/52.jpg'), ('Block2Corr', 'right')]), OrderedDict([('Block2Type', 'Fix2'), ('Block2Stim', '/Users/nmuncy/Projects/cal_abstract/stimuli/Healthy/6.jpg'), ('Block2Corr', 'left')]), OrderedDict([('Block2Type', 'Fix2'), ('Block2Stim', '/Users/nmuncy/Projects/cal_abstract/stimuli/Healthy/22.jpg'), ('Block2Corr', 'left')]), OrderedDict([('Block2Type', 'Fix2'), ('Block2Stim', '/Users/nmuncy/Projects/cal_abstract/stimuli/Healthy/66.jpg'), ('Block2Corr', 'left')]), OrderedDict([('Block2Type', 'Cond'), ('Block2Stim', '/Users/nmuncy/Projects/cal_abstract/stimuli/Wealth/12.jpg'), ('Block2Corr', 'right')]), OrderedDict([('Block2Type', 'Cond'), ('Block2Stim', '/Users/nmuncy/Projects/cal_abstract/stimuli/Wealth/54.jpg'), ('Block2Corr', 'left')]), OrderedDict([('Block2Type', 'Fix1'), ('Block2Stim', '/Users/nmuncy/Projects/cal_abstract/stimuli/Old/38.jpg'), ('Block2Corr', 'right')]), OrderedDict([('Block2Type', 'Fix1'), ('Block2Stim', '/Users/nmuncy/Projects/cal_abstract/stimuli/Old/33.jpg'), ('Block2Corr', 'right')]), OrderedDict([('Block2Type', 'Fix1'), ('Block2Stim', '/Users/nmuncy/Projects/cal_abstract/stimuli/Old/18.jpg'), ('Block2Corr', 'right')]), OrderedDict([('Block2Type', 'Cond'), ('Block2Stim', '/Users/nmuncy/Projects/cal_abstract/stimuli/Wealth/22.jpg'), ('Block2Corr', 'left')]), OrderedDict([('Block2Type', 'Fix2'), ('Block2Stim', '/Users/nmuncy/Projects/cal_abstract/stimuli/Healthy/47.jpg'), ('Block2Corr', 'left')]), OrderedDict([('Block2Type', 'Cond'), ('Block2Stim', '/Users/nmuncy/Projects/cal_abstract/stimuli/Wealth/26.jpg'), ('Block2Corr', 'right')]), OrderedDict([('Block2Type', 'Fix2'), ('Block2Stim', '/Users/nmuncy/Projects/cal_abstract/stimuli/Healthy/36.jpg'), ('Block2Corr', 'left')]), OrderedDict([('Block2Type', 'Fix2'), ('Block2Stim', '/Users/nmuncy/Projects/cal_abstract/stimuli/Healthy/30.jpg'), ('Block2Corr', 'left')]), OrderedDict([('Block2Type', 'Cond'), ('Block2Stim', '/Users/nmuncy/Projects/cal_abstract/stimuli/Wealth/4.jpg'), ('Block2Corr', 'right')]), OrderedDict([('Block2Type', 'Fix2'), ('Block2Stim', '/Users/nmuncy/Projects/cal_abstract/stimuli/Healthy/17.jpg'), ('Block2Corr', 'left')]), OrderedDict([('Block2Type', 'Cond'), ('Block2Stim', '/Users/nmuncy/Projects/cal_abstract/stimuli/Wealth/43.jpg'), ('Block2Corr', 'right')]), OrderedDict([('Block2Type', 'Cond'), ('Block2Stim', '/Users/nmuncy/Projects/cal_abstract/stimuli/Wealth/32.jpg'), ('Block2Corr', 'left')]), OrderedDict([('Block2Type', 'Fix2'), ('Block2Stim', '/Users/nmuncy/Projects/cal_abstract/stimuli/Healthy/5.jpg'), ('Block2Corr', 'left')]), OrderedDict([('Block2Type', 'Fix1'), ('Block2Stim', '/Users/nmuncy/Projects/cal_abstract/stimuli/Old/31.jpg'), ('Block2Corr', 'right')]), OrderedDict([('Block2Type', 'Fix2'), ('Block2Stim', '/Users/nmuncy/Projects/cal_abstract/stimuli/Healthy/65.jpg'), ('Block2Corr', 'left')]), OrderedDict([('Block2Type', 'Fix2'), ('Block2Stim', '/Users/nmuncy/Projects/cal_abstract/stimuli/Healthy/32.jpg'), ('Block2Corr', 'left')]), OrderedDict([('Block2Type', 'Fix1'), ('Block2Stim', '/Users/nmuncy/Projects/cal_abstract/stimuli/Old/5.jpg'), ('Block2Corr', 'right')]), OrderedDict([('Block2Type', 'Fix1'), ('Block2Stim', '/Users/nmuncy/Projects/cal_abstract/stimuli/Old/37.jpg'), ('Block2Corr', 'right')]), OrderedDict([('Block2Type', 'Fix1'), ('Block2Stim', '/Users/nmuncy/Projects/cal_abstract/stimuli/Old/41.jpg'), ('Block2Corr', 'right')]), OrderedDict([('Block2Type', 'Cond'), ('Block2Stim', '/Users/nmuncy/Projects/cal_abstract/stimuli/Wealth/52.jpg'), ('Block2Corr', 'left')]), OrderedDict([('Block2Type', 'Fix2'), ('Block2Stim', '/Users/nmuncy/Projects/cal_abstract/stimuli/Healthy/16.jpg'), ('Block2Corr', 'left')]), OrderedDict([('Block2Type', 'Fix2'), ('Block2Stim', '/Users/nmuncy/Projects/cal_abstract/stimuli/Healthy/39.jpg'), ('Block2Corr', 'left')]), OrderedDict([('Block2Type', 'Fix1'), ('Block2Stim', '/Users/nmuncy/Projects/cal_abstract/stimuli/Old/16.jpg'), ('Block2Corr', 'right')]), OrderedDict([('Block2Type', 'Cond'), ('Block2Stim', '/Users/nmuncy/Projects/cal_abstract/stimuli/Wealth/42.jpg'), ('Block2Corr', 'left')]), OrderedDict([('Block2Type', 'Fix2'), ('Block2Stim', '/Users/nmuncy/Projects/cal_abstract/stimuli/Healthy/23.jpg'), ('Block2Corr', 'left')]), OrderedDict([('Block2Type', 'Fix1'), ('Block2Stim', '/Users/nmuncy/Projects/cal_abstract/stimuli/Old/27.jpg'), ('Block2Corr', 'right')]), OrderedDict([('Block2Type', 'Fix2'), ('Block2Stim', '/Users/nmuncy/Projects/cal_abstract/stimuli/Healthy/54.jpg'), ('Block2Corr', 'left')]), OrderedDict([('Block2Type', 'Fix1'), ('Block2Stim', '/Users/nmuncy/Projects/cal_abstract/stimuli/Old/57.jpg'), ('Block2Corr', 'right')]), OrderedDict([('Block2Type', 'Fix2'), ('Block2Stim', '/Users/nmuncy/Projects/cal_abstract/stimuli/Healthy/11.jpg'), ('Block2Corr', 'left')]), OrderedDict([('Block2Type', 'Fix2'), ('Block2Stim', '/Users/nmuncy/Projects/cal_abstract/stimuli/Healthy/68.jpg'), ('Block2Corr', 'left')]), OrderedDict([('Block2Type', 'Cond'), ('Block2Stim', '/Users/nmuncy/Projects/cal_abstract/stimuli/Wealth/49.jpg'), ('Block2Corr', 'right')]), OrderedDict([('Block2Type', 'Fix1'), ('Block2Stim', '/Users/nmuncy/Projects/cal_abstract/stimuli/Old/0.jpg'), ('Block2Corr', 'right')]), OrderedDict([('Block2Type', 'Fix1'), ('Block2Stim', '/Users/nmuncy/Projects/cal_abstract/stimuli/Old/49.jpg'), ('Block2Corr', 'right')]), OrderedDict([('Block2Type', 'Cond'), ('Block2Stim', '/Users/nmuncy/Projects/cal_abstract/stimuli/Wealth/20.jpg'), ('Block2Corr', 'left')]), OrderedDict([('Block2Type', 'Fix1'), ('Block2Stim', '/Users/nmuncy/Projects/cal_abstract/stimuli/Old/20.jpg'), ('Block2Corr', 'right')]), OrderedDict([('Block2Type', 'Fix2'), ('Block2Stim', '/Users/nmuncy/Projects/cal_abstract/stimuli/Healthy/31.jpg'), ('Block2Corr', 'left')]), OrderedDict([('Block2Type', 'Fix2'), ('Block2Stim', '/Users/nmuncy/Projects/cal_abstract/stimuli/Healthy/27.jpg'), ('Block2Corr', 'left')]), OrderedDict([('Block2Type', 'Fix2'), ('Block2Stim', '/Users/nmuncy/Projects/cal_abstract/stimuli/Healthy/50.jpg'), ('Block2Corr', 'left')]), OrderedDict([('Block2Type', 'Fix2'), ('Block2Stim', '/Users/nmuncy/Projects/cal_abstract/stimuli/Healthy/35.jpg'), ('Block2Corr', 'left')]), OrderedDict([('Block2Type', 'Cond'), ('Block2Stim', '/Users/nmuncy/Projects/cal_abstract/stimuli/Wealth/38.jpg'), ('Block2Corr', 'right')]), OrderedDict([('Block2Type', 'Cond'), ('Block2Stim', '/Users/nmuncy/Projects/cal_abstract/stimuli/Wealth/15.jpg'), ('Block2Corr', 'left')]), OrderedDict([('Block2Type', 'Fix2'), ('Block2Stim', '/Users/nmuncy/Projects/cal_abstract/stimuli/Healthy/21.jpg'), ('Block2Corr', 'left')]), OrderedDict([('Block2Type', 'Cond'), ('Block2Stim', '/Users/nmuncy/Projects/cal_abstract/stimuli/Wealth/17.jpg'), ('Block2Corr', 'right')]), OrderedDict([('Block2Type', 'Fix1'), ('Block2Stim', '/Users/nmuncy/Projects/cal_abstract/stimuli/Old/32.jpg'), ('Block2Corr', 'right')]), OrderedDict([('Block2Type', 'Cond'), ('Block2Stim', '/Users/nmuncy/Projects/cal_abstract/stimuli/Wealth/14.jpg'), ('Block2Corr', 'left')]), OrderedDict([('Block2Type', 'Cond'), ('Block2Stim', '/Users/nmuncy/Projects/cal_abstract/stimuli/Wealth/11.jpg'), ('Block2Corr', 'right')]), OrderedDict([('Block2Type', 'Cond'), ('Block2Stim', '/Users/nmuncy/Projects/cal_abstract/stimuli/Wealth/36.jpg'), ('Block2Corr', 'left')]), OrderedDict([('Block2Type', 'Cond'), ('Block2Stim', '/Users/nmuncy/Projects/cal_abstract/stimuli/Wealth/53.jpg'), ('Block2Corr', 'right')]), OrderedDict([('Block2Type', 'Fix1'), ('Block2Stim', '/Users/nmuncy/Projects/cal_abstract/stimuli/Old/54.jpg'), ('Block2Corr', 'right')]), OrderedDict([('Block2Type', 'Fix2'), ('Block2Stim', '/Users/nmuncy/Projects/cal_abstract/stimuli/Healthy/12.jpg'), ('Block2Corr', 'left')]), OrderedDict([('Block2Type', 'Fix2'), ('Block2Stim', '/Users/nmuncy/Projects/cal_abstract/stimuli/Healthy/69.jpg'), ('Block2Corr', 'left')]), OrderedDict([('Block2Type', 'Cond'), ('Block2Stim', '/Users/nmuncy/Projects/cal_abstract/stimuli/Wealth/34.jpg'), ('Block2Corr', 'right')]), OrderedDict([('Block2Type', 'Fix1'), ('Block2Stim', '/Users/nmuncy/Projects/cal_abstract/stimuli/Old/24.jpg'), ('Block2Corr', 'right')]), OrderedDict([('Block2Type', 'Fix1'), ('Block2Stim', '/Users/nmuncy/Projects/cal_abstract/stimuli/Old/51.jpg'), ('Block2Corr', 'right')]), OrderedDict([('Block2Type', 'Fix2'), ('Block2Stim', '/Users/nmuncy/Projects/cal_abstract/stimuli/Healthy/14.jpg'), ('Block2Corr', 'left')]), OrderedDict([('Block2Type', 'Fix1'), ('Block2Stim', '/Users/nmuncy/Projects/cal_abstract/stimuli/Old/14.jpg'), ('Block2Corr', 'right')]), OrderedDict([('Block2Type', 'Cond'), ('Block2Stim', '/Users/nmuncy/Projects/cal_abstract/stimuli/Wealth/13.jpg'), ('Block2Corr', 'left')]), OrderedDict([('Block2Type', 'Fix1'), ('Block2Stim', '/Users/nmuncy/Projects/cal_abstract/stimuli/Old/43.jpg'), ('Block2Corr', 'right')]), OrderedDict([('Block2Type', 'Cond'), ('Block2Stim', '/Users/nmuncy/Projects/cal_abstract/stimuli/Wealth/41.jpg'), ('Block2Corr', 'left')]), OrderedDict([('Block2Type', 'Fix1'), ('Block2Stim', '/Users/nmuncy/Projects/cal_abstract/stimuli/Old/22.jpg'), ('Block2Corr', 'right')]), OrderedDict([('Block2Type', 'Cond'), ('Block2Stim', '/Users/nmuncy/Projects/cal_abstract/stimuli/Wealth/30.jpg'), ('Block2Corr', 'left')]), OrderedDict([('Block2Type', 'Fix1'), ('Block2Stim', '/Users/nmuncy/Projects/cal_abstract/stimuli/Old/7.jpg'), ('Block2Corr', 'right')]), OrderedDict([('Block2Type', 'Fix2'), ('Block2Stim', '/Users/nmuncy/Projects/cal_abstract/stimuli/Healthy/49.jpg'), ('Block2Corr', 'left')]), OrderedDict([('Block2Type', 'Fix2'), ('Block2Stim', '/Users/nmuncy/Projects/cal_abstract/stimuli/Healthy/8.jpg'), ('Block2Corr', 'left')]), OrderedDict([('Block2Type', 'Fix1'), ('Block2Stim', '/Users/nmuncy/Projects/cal_abstract/stimuli/Old/34.jpg'), ('Block2Corr', 'right')]), OrderedDict([('Block2Type', 'Cond'), ('Block2Stim', '/Users/nmuncy/Projects/cal_abstract/stimuli/Wealth/45.jpg'), ('Block2Corr', 'left')]), OrderedDict([('Block2Type', 'Fix1'), ('Block2Stim', '/Users/nmuncy/Projects/cal_abstract/stimuli/Old/36.jpg'), ('Block2Corr', 'right')]), OrderedDict([('Block2Type', 'Fix1'), ('Block2Stim', '/Users/nmuncy/Projects/cal_abstract/stimuli/Old/6.jpg'), ('Block2Corr', 'right')]), OrderedDict([('Block2Type', 'Cond'), ('Block2Stim', '/Users/nmuncy/Projects/cal_abstract/stimuli/Wealth/46.jpg'), ('Block2Corr', 'left')]), OrderedDict([('Block2Type', 'Fix1'), ('Block2Stim', '/Users/nmuncy/Projects/cal_abstract/stimuli/Old/40.jpg'), ('Block2Corr', 'right')]), OrderedDict([('Block2Type', 'Cond'), ('Block2Stim', '/Users/nmuncy/Projects/cal_abstract/stimuli/Wealth/56.jpg'), ('Block2Corr', 'left')])]" valType="str"/>
      <Param name="conditionsFile" updates="None" val="blocks/Block2.csv" valType="str"/>
      <Param name="endPoints" updates="None" val="[0, 1]" valType="num"/>
      <Param name="isTrials" updates="None" val="True" valType="bool"/>
      <Param name="loopType" updates="None" val="sequential" valType="str"/>
      <Param name="nReps" updates="None" val="1" valType="code"/>
      <Param name="name" updates="None" val="Block2_loop" valType="code"/>
      <Param name="random seed" updates="None" val="" valType="code"/>
    </LoopInitiator>
    <Routine name="Block2"/>
    <Routine name="Feedback2"/>
    <LoopTerminator name="Block2_loop"/>
    <Routine name="Break2"/>
    <Routine name="Start3"/>
    <LoopInitiator loopType="TrialHandler" name="Block3_loop">
      <Param name="Selected rows" updates="None" val="" valType="str"/>
      <Param name="conditions" updates="None" val="[OrderedDict([('Block3Type', 'Fix2'), ('Block3Stim', '/Users/nmuncy/Projects/cal_abstract/stimuli/Soft/26.jpg'), ('Block3Corr', 'right')]), OrderedDict([('Block3Type', 'Fix1'), ('Block3Stim', '/Users/nmuncy/Projects/cal_abstract/stimuli/Sad/0.jpg'), ('Block3Corr', 'left')]), OrderedDict([('Block3Type', 'Fix1'), ('Block3Stim', '/Users/nmuncy/Projects/cal_abstract/stimuli/Sad/14.jpg'), ('Block3Corr', 'left')]), OrderedDict([('Block3Type', 'Fix1'), ('Block3Stim', '/Users/nmuncy/Projects/cal_abstract/stimuli/Sad/26.jpg'), ('Block3Corr', 'left')]), OrderedDict([('Block3Type', 'Fix1'), ('Block3Stim', '/Users/nmuncy/Projects/cal_abstract/stimuli/Sad/13.jpg'), ('Block3Corr', 'left')]), OrderedDict([('Block3Type', 'Cond'), ('Block3Stim', '/Users/nmuncy/Projects/cal_abstract/stimuli/Smell/29.jpg'), ('Block3Corr', 'right')]), OrderedDict([('Block3Type', 'Fix2'), ('Block3Stim', '/Users/nmuncy/Projects/cal_abstract/stimuli/Soft/46.jpg'), ('Block3Corr', 'right')]), OrderedDict([('Block3Type', 'Fix2'), ('Block3Stim', '/Users/nmuncy/Projects/cal_abstract/stimuli/Soft/8.jpg'), ('Block3Corr', 'right')]), OrderedDict([('Block3Type', 'Fix2'), ('Block3Stim', '/Users/nmuncy/Projects/cal_abstract/stimuli/Soft/35.jpg'), ('Block3Corr', 'right')]), OrderedDict([('Block3Type', 'Cond'), ('Block3Stim', '/Users/nmuncy/Projects/cal_abstract/stimuli/Smell/57.jpg'), ('Block3Corr', 'left')]), OrderedDict([('Block3Type', 'Fix1'), ('Block3Stim', '/Users/nmuncy/Projects/cal_abstract/stimuli/Sad/43.jpg'), ('Block3Corr', 'left')]), OrderedDict([('Block3Type', 'Fix1'), ('Block3Stim', '/Users/nmuncy/Projects/cal_abstract/stimuli/Sad/16.jpg'), ('Block3Corr', 'left')]), OrderedDict([('Block3Type', 'Fix2'), ('Block3Stim', '/Users/nmuncy/Projects/cal_abstract/stimuli/Soft/23.jpg'), ('Block3Corr', 'right')]), OrderedDict([('Block3Type', 'Fix2'), ('Block3Stim', '/Users/nmuncy/Projects/cal_abstract/stimuli/Soft/31.jpg'), ('Block3Corr', 'right')]), OrderedDict([('Block3Type', 'Cond'), ('Block3Stim', '/Users/nmuncy/Projects/cal_abstract/stimuli/Smell/0.jpg'), ('Block3Corr', 'left')]), OrderedDict([('Block3Type', 'Cond'), ('Block3Stim', '/Users/nmuncy/Projects/cal_abstract/stimuli/Smell/43.jpg'), ('Block3Corr', 'right')]), OrderedDict([('Block3Type', 'Fix1'), ('Block3Stim', '/Users/nmuncy/Projects/cal_abstract/stimuli/Sad/36.jpg'), ('Block3Corr', 'left')]), OrderedDict([('Block3Type', 'Cond'), ('Block3Stim', '/Users/nmuncy/Projects/cal_abstract/stimuli/Smell/13.jpg'), ('Block3Corr', 'right')]), OrderedDict([('Block3Type', 'Fix2'), ('Block3Stim', '/Users/nmuncy/Projects/cal_abstract/stimuli/Soft/58.jpg'), ('Block3Corr', 'right')]), OrderedDict([('Block3Type', 'Fix2'), ('Block3Stim', '/Users/nmuncy/Projects/cal_abstract/stimuli/Soft/11.jpg'), ('Block3Corr', 'right')]), OrderedDict([('Block3Type', 'Fix2'), ('Block3Stim', '/Users/nmuncy/Projects/cal_abstract/stimuli/Soft/2.jpg'), ('Block3Corr', 'right')]), OrderedDict([('Block3Type', 'Fix2'), ('Block3Stim', '/Users/nmuncy/Projects/cal_abstract/stimuli/Soft/53.jpg'), ('Block3Corr', 'right')]), OrderedDict([('Block3Type', 'Fix1'), ('Block3Stim', '/Users/nmuncy/Projects/cal_abstract/stimuli/Sad/12.jpg'), ('Block3Corr', 'left')]), OrderedDict([('Block3Type', 'Cond'), ('Block3Stim', '/Users/nmuncy/Projects/cal_abstract/stimuli/Smell/37.jpg'), ('Block3Corr', 'right')]), OrderedDict([('Block3Type', 'Fix1'), ('Block3Stim', '/Users/nmuncy/Projects/cal_abstract/stimuli/Sad/25.jpg'), ('Block3Corr', 'left')]), OrderedDict([('Block3Type', 'Fix2'), ('Block3Stim', '/Users/nmuncy/Projects/cal_abstract/stimuli/Soft/33.jpg'), ('Block3Corr', 'right')]), OrderedDict([('Block3Type', 'Fix2'), ('Block3Stim', '/Users/nmuncy/Projects/cal_abstract/stimuli/Soft/42.jpg'), ('Block3Corr', 'right')]), OrderedDict([('Block3Type', 'Fix1'), ('Block3Stim', '/Users/nmuncy/Projects/cal_abstract/stimuli/Sad/21.jpg'), ('Block3Corr', 'left')]), OrderedDict([('Block3Type', 'Cond'), ('Block3Stim', '/Users/nmuncy/Projects/cal_abstract/stimuli/Smell/18.jpg'), ('Block3Corr', 'right')]), OrderedDict([('Block3Type', 'Fix1'), ('Block3Stim', '/Users/nmuncy/Projects/cal_abstract/stimuli/Sad/57.jpg'), ('Block3Corr', 'left')]), OrderedDict([('Block3Type', 'Fix1'), ('Block3Stim', '/Users/nmuncy/Projects/cal_abstract/stimuli/Sad/32.jpg'), ('Block3Corr', 'left')]), OrderedDict([('Block3Type', 'Fix1'), ('Block3Stim', '/Users/nmuncy/Projects/cal_abstract/stimuli/Sad/27.jpg'), ('Block3Corr', 'left')]), OrderedDict([('Block3Type', 'Cond'), ('Block3Stim', '/Users/nmuncy/Projects/cal_abstract/stimuli/Smell/7.jpg'), ('Block3Corr', 'right')]), OrderedDict([('Block3Type', 'Fix1'), ('Block3Stim', '/Users/nmuncy/Projects/cal_abstract/stimuli/Sad/11.jpg'), ('Block3Corr', 'left')]), OrderedDict([('Block3Type', 'Fix2'), ('Block3Stim', '/Users/nmuncy/Projects/cal_abstract/stimuli/Soft/9.jpg'), ('Block3Corr', 'right')]), OrderedDict([('Block3Type', 'Cond'), ('Block3Stim', '/Users/nmuncy/Projects/cal_abstract/stimuli/Smell/19.jpg'), ('Block3Corr', 'left')]), OrderedDict([('Block3Type', 'Fix1'), ('Block3Stim', '/Users/nmuncy/Projects/cal_abstract/stimuli/Sad/41.jpg'), ('Block3Corr', 'left')]), OrderedDict([('Block3Type', 'Fix2'), ('Block3Stim', '/Users/nmuncy/Projects/cal_abstract/stimuli/Soft/32.jpg'), ('Block3Corr', 'right')]), OrderedDict([('Block3Type', 'Fix2'), ('Block3Stim', '/Users/nmuncy/Projects/cal_abstract/stimuli/Soft/28.jpg'), ('Block3Corr', 'right')]), OrderedDict([('Block3Type', 'Cond'), ('Block3Stim', '/Users/nmuncy/Projects/cal_abstract/stimuli/Smell/33.jpg'), ('Block3Corr', 'left')]), OrderedDict([('Block3Type', 'Fix2'), ('Block3Stim', '/Users/nmuncy/Projects/cal_abstract/stimuli/Soft/17.jpg'), ('Block3Corr', 'right')]), OrderedDict([('Block3Type', 'Cond'), ('Block3Stim', '/Users/nmuncy/Projects/cal_abstract/stimuli/Smell/10.jpg'), ('Block3Corr', 'left')]), OrderedDict([('Block3Type', 'Fix1'), ('Block3Stim', '/Users/nmuncy/Projects/cal_abstract/stimuli/Sad/44.jpg'), ('Block3Corr', 'left')]), OrderedDict([('Block3Type', 'Fix1'), ('Block3Stim', '/Users/nmuncy/Projects/cal_abstract/stimuli/Sad/48.jpg'), ('Block3Corr', 'left')]), OrderedDict([('Block3Type', 'Fix1'), ('Block3Stim', '/Users/nmuncy/Projects/cal_abstract/stimuli/Sad/4.jpg'), ('Block3Corr', 'left')]), OrderedDict([('Block3Type', 'Fix1'), ('Block3Stim', '/Users/nmuncy/Projects/cal_abstract/stimuli/Sad/53.jpg'), ('Block3Corr', 'left')]), OrderedDict([('Block3Type', 'Cond'), ('Block3Stim', '/Users/nmuncy/Projects/cal_abstract/stimuli/Smell/56.jpg'), ('Block3Corr', 'right')]), OrderedDict([('Block3Type', 'Fix2'), ('Block3Stim', '/Users/nmuncy/Projects/cal_abstract/stimuli/Soft/34.jpg'), ('Block3Corr', 'right')]), OrderedDict([('Block3Type', 'Cond'), ('Block3Stim', '/Users/nmuncy/Projects/cal_abstract/stimuli/Smell/23.jpg'), ('Block3Corr', 'left')]), OrderedDict([('Block3Type', 'Cond'), ('Block3Stim', '/Users/nmuncy/Projects/cal_abstract/stimuli/Smell/25.jpg'), ('Block3Corr', 'right')]), OrderedDict([('Block3Type', 'Cond'), ('Block3Stim', '/Users/nmuncy/Projects/cal_abstract/stimuli/Smell/2.jpg'), ('Block3Corr', 'left')]), OrderedDict([('Block3Type', 'Fix1'), ('Block3Stim', '/Users/nmuncy/Projects/cal_abstract/stimuli/Sad/1.jpg'), ('Block3Corr', 'left')]), OrderedDict([('Block3Type', 'Cond'), ('Block3Stim', '/Users/nmuncy/Projects/cal_abstract/stimuli/Smell/46.jpg'), ('Block3Corr', 'right')]), OrderedDict([('Block3Type', 'Fix2'), ('Block3Stim', '/Users/nmuncy/Projects/cal_abstract/stimuli/Soft/30.jpg'), ('Block3Corr', 'right')]), OrderedDict([('Block3Type', 'Fix2'), ('Block3Stim', '/Users/nmuncy/Projects/cal_abstract/stimuli/Soft/27.jpg'), ('Block3Corr', 'right')]), OrderedDict([('Block3Type', 'Cond'), ('Block3Stim', '/Users/nmuncy/Projects/cal_abstract/stimuli/Smell/9.jpg'), ('Block3Corr', 'left')]), OrderedDict([('Block3Type', 'Fix1'), ('Block3Stim', '/Users/nmuncy/Projects/cal_abstract/stimuli/Sad/47.jpg'), ('Block3Corr', 'left')]), OrderedDict([('Block3Type', 'Cond'), ('Block3Stim', '/Users/nmuncy/Projects/cal_abstract/stimuli/Smell/49.jpg'), ('Block3Corr', 'right')]), OrderedDict([('Block3Type', 'Fix1'), ('Block3Stim', '/Users/nmuncy/Projects/cal_abstract/stimuli/Sad/7.jpg'), ('Block3Corr', 'left')]), OrderedDict([('Block3Type', 'Cond'), ('Block3Stim', '/Users/nmuncy/Projects/cal_abstract/stimuli/Smell/54.jpg'), ('Block3Corr', 'right')]), OrderedDict([('Block3Type', 'Fix2'), ('Block3Stim', '/Users/nmuncy/Projects/cal_abstract/stimuli/Soft/10.jpg'), ('Block3Corr', 'right')]), OrderedDict([('Block3Type', 'Fix1'), ('Block3Stim', '/Users/nmuncy/Projects/cal_abstract/stimuli/Sad/5.jpg'), ('Block3Corr', 'left')]), OrderedDict([('Block3Type', 'Fix2'), ('Block3Stim', '/Users/nmuncy/Projects/cal_abstract/stimuli/Soft/38.jpg'), ('Block3Corr', 'right')]), OrderedDict([('Block3Type', 'Cond'), ('Block3Stim', '/Users/nmuncy/Projects/cal_abstract/stimuli/Smell/6.jpg'), ('Block3Corr', 'left')]), OrderedDict([('Block3Type', 'Fix2'), ('Block3Stim', '/Users/nmuncy/Projects/cal_abstract/stimuli/Soft/49.jpg'), ('Block3Corr', 'right')]), OrderedDict([('Block3Type', 'Fix1'), ('Block3Stim', '/Users/nmuncy/Projects/cal_abstract/stimuli/Sad/52.jpg'), ('Block3Corr', 'left')]), OrderedDict([('Block3Type', 'Cond'), ('Block3Stim', '/Users/nmuncy/Projects/cal_abstract/stimuli/Smell/12.jpg'), ('Block3Corr', 'right')]), OrderedDict([('Block3Type', 'Fix1'), ('Block3Stim', '/Users/nmuncy/Projects/cal_abstract/stimuli/Sad/28.jpg'), ('Block3Corr', 'left')]), OrderedDict([('Block3Type', 'Cond'), ('Block3Stim', '/Users/nmuncy/Projects/cal_abstract/stimuli/Smell/22.jpg'), ('Block3Corr', 'right')]), OrderedDict([('Block3Type', 'Fix1'), ('Block3Stim', '/Users/nmuncy/Projects/cal_abstract/stimuli/Sad/15.jpg'), ('Block3Corr', 'left')]), OrderedDict([('Block3Type', 'Fix1'), ('Block3Stim', '/Users/nmuncy/Projects/cal_abstract/stimuli/Sad/51.jpg'), ('Block3Corr', 'left')]), OrderedDict([('Block3Type', 'Fix1'), ('Block3Stim', '/Users/nmuncy/Projects/cal_abstract/stimuli/Sad/19.jpg'), ('Block3Corr', 'left')]), OrderedDict([('Block3Type', 'Fix1'), ('Block3Stim', '/Users/nmuncy/Projects/cal_abstract/stimuli/Sad/39.jpg'), ('Block3Corr', 'left')]), OrderedDict([('Block3Type', 'Fix1'), ('Block3Stim', '/Users/nmuncy/Projects/cal_abstract/stimuli/Sad/29.jpg'), ('Block3Corr', 'left')]), OrderedDict([('Block3Type', 'Fix1'), ('Block3Stim', '/Users/nmuncy/Projects/cal_abstract/stimuli/Sad/17.jpg'), ('Block3Corr', 'left')]), OrderedDict([('Block3Type', 'Fix2'), ('Block3Stim', '/Users/nmuncy/Projects/cal_abstract/stimuli/Soft/57.jpg'), ('Block3Corr', 'right')]), OrderedDict([('Block3Type', 'Fix2'), ('Block3Stim', '/Users/nmuncy/Projects/cal_abstract/stimuli/Soft/56.jpg'), ('Block3Corr', 'right')]), OrderedDict([('Block3Type', 'Cond'), ('Block3Stim', '/Users/nmuncy/Projects/cal_abstract/stimuli/Smell/52.jpg'), ('Block3Corr', 'left')]), OrderedDict([('Block3Type', 'Fix2'), ('Block3Stim', '/Users/nmuncy/Projects/cal_abstract/stimuli/Soft/15.jpg'), ('Block3Corr', 'right')]), OrderedDict([('Block3Type', 'Fix2'), ('Block3Stim', '/Users/nmuncy/Projects/cal_abstract/stimuli/Soft/39.jpg'), ('Block3Corr', 'right')]), OrderedDict([('Block3Type', 'Cond'), ('Block3Stim', '/Users/nmuncy/Projects/cal_abstract/stimuli/Smell/3.jpg'), ('Block3Corr', 'left')]), OrderedDict([('Block3Type', 'Cond'), ('Block3Stim', '/Users/nmuncy/Projects/cal_abstract/stimuli/Smell/38.jpg'), ('Block3Corr', 'right')]), OrderedDict([('Block3Type', 'Cond'), ('Block3Stim', '/Users/nmuncy/Projects/cal_abstract/stimuli/Smell/21.jpg'), ('Block3Corr', 'left')]), OrderedDict([('Block3Type', 'Fix1'), ('Block3Stim', '/Users/nmuncy/Projects/cal_abstract/stimuli/Sad/54.jpg'), ('Block3Corr', 'left')]), OrderedDict([('Block3Type', 'Fix1'), ('Block3Stim', '/Users/nmuncy/Projects/cal_abstract/stimuli/Sad/2.jpg'), ('Block3Corr', 'left')]), OrderedDict([('Block3Type', 'Fix2'), ('Block3Stim', '/Users/nmuncy/Projects/cal_abstract/stimuli/Soft/12.jpg'), ('Block3Corr', 'right')]), OrderedDict([('Block3Type', 'Fix2'), ('Block3Stim', '/Users/nmuncy/Projects/cal_abstract/stimuli/Soft/44.jpg'), ('Block3Corr', 'right')]), OrderedDict([('Block3Type', 'Fix1'), ('Block3Stim', '/Users/nmuncy/Projects/cal_abstract/stimuli/Sad/8.jpg'), ('Block3Corr', 'left')]), OrderedDict([('Block3Type', 'Fix2'), ('Block3Stim', '/Users/nmuncy/Projects/cal_abstract/stimuli/Soft/5.jpg'), ('Block3Corr', 'right')]), OrderedDict([('Block3Type', 'Cond'), ('Block3Stim', '/Users/nmuncy/Projects/cal_abstract/stimuli/Smell/15.jpg'), ('Block3Corr', 'left')]), OrderedDict([('Block3Type', 'Cond'), ('Block3Stim', '/Users/nmuncy/Projects/cal_abstract/stimuli/Smell/39.jpg'), ('Block3Corr', 'right')]), OrderedDict([('Block3Type', 'Cond'), ('Block3Stim', '/Users/nmuncy/Projects/cal_abstract/stimuli/Smell/58.jpg'), ('Block3Corr', 'left')]), OrderedDict([('Block3Type', 'Fix2'), ('Block3Stim', '/Users/nmuncy/Projects/cal_abstract/stimuli/Soft/52.jpg'), ('Block3Corr', 'right')]), OrderedDict([('Block3Type', 'Cond'), ('Block3Stim', '/Users/nmuncy/Projects/cal_abstract/stimuli/Smell/24.jpg'), ('Block3Corr', 'left')]), OrderedDict([('Block3Type', 'Fix1'), ('Block3Stim', '/Users/nmuncy/Projects/cal_abstract/stimuli/Sad/20.jpg'), ('Block3Corr', 'left')]), OrderedDict([('Block3Type', 'Fix2'), ('Block3Stim', '/Users/nmuncy/Projects/cal_abstract/stimuli/Soft/21.jpg'), ('Block3Corr', 'right')]), OrderedDict([('Block3Type', 'Fix1'), ('Block3Stim', '/Users/nmuncy/Projects/cal_abstract/stimuli/Sad/23.jpg'), ('Block3Corr', 'left')]), OrderedDict([('Block3Type', 'Fix1'), ('Block3Stim', '/Users/nmuncy/Projects/cal_abstract/stimuli/Sad/18.jpg'), ('Block3Corr', 'left')]), OrderedDict([('Block3Type', 'Fix1'), ('Block3Stim', '/Users/nmuncy/Projects/cal_abstract/stimuli/Sad/49.jpg'), ('Block3Corr', 'left')]), OrderedDict([('Block3Type', 'Fix1'), ('Block3Stim', '/Users/nmuncy/Projects/cal_abstract/stimuli/Sad/59.jpg'), ('Block3Corr', 'left')]), OrderedDict([('Block3Type', 'Fix1'), ('Block3Stim', '/Users/nmuncy/Projects/cal_abstract/stimuli/Sad/38.jpg'), ('Block3Corr', 'left')]), OrderedDict([('Block3Type', 'Fix2'), ('Block3Stim', '/Users/nmuncy/Projects/cal_abstract/stimuli/Soft/4.jpg'), ('Block3Corr', 'right')]), OrderedDict([('Block3Type', 'Cond'), ('Block3Stim', '/Users/nmuncy/Projects/cal_abstract/stimuli/Smell/16.jpg'), ('Block3Corr', 'left')]), OrderedDict([('Block3Type', 'Fix2'), ('Block3Stim', '/Users/nmuncy/Projects/cal_abstract/stimuli/Soft/45.jpg'), ('Block3Corr', 'right')]), OrderedDict([('Block3Type', 'Cond'), ('Block3Stim', '/Users/nmuncy/Projects/cal_abstract/stimuli/Smell/53.jpg'), ('Block3Corr', 'left')]), OrderedDict([('Block3Type', 'Fix2'), ('Block3Stim', '/Users/nmuncy/Projects/cal_abstract/stimuli/Soft/24.jpg'), ('Block3Corr', 'right')]), OrderedDict([('Block3Type', 'Cond'), ('Block3Stim', '/Users/nmuncy/Projects/cal_abstract/stimuli/Smell/20.jpg'), ('Block3Corr', 'left')]), OrderedDict([('Block3Type', 'Cond'), ('Block3Stim', '/Users/nmuncy/Projects/cal_abstract/stimuli/Smell/40.jpg'), ('Block3Corr', 'right')]), OrderedDict([('Block3Type', 'Cond'), ('Block3Stim', '/Users/nmuncy/Projects/cal_abstract/stimuli/Smell/28.jpg'), ('Block3Corr', 'left')]), OrderedDict([('Block3Type', 'Fix1'), ('Block3Stim', '/Users/nmuncy/Projects/cal_abstract/stimuli/Sad/24.jpg'), ('Block3Corr', 'left')]), OrderedDict([('Block3Type', 'Fix2'), ('Block3Stim', '/Users/nmuncy/Projects/cal_abstract/stimuli/Soft/50.jpg'), ('Block3Corr', 'right')]), OrderedDict([('Block3Type', 'Fix2'), ('Block3Stim', '/Users/nmuncy/Projects/cal_abstract/stimuli/Soft/22.jpg'), ('Block3Corr', 'right')]), OrderedDict([('Block3Type', 'Fix2'), ('Block3Stim', '/Users/nmuncy/Projects/cal_abstract/stimuli/Soft/43.jpg'), ('Block3Corr', 'right')]), OrderedDict([('Block3Type', 'Fix1'), ('Block3Stim', '/Users/nmuncy/Projects/cal_abstract/stimuli/Sad/34.jpg'), ('Block3Corr', 'left')]), OrderedDict([('Block3Type', 'Fix1'), ('Block3Stim', '/Users/nmuncy/Projects/cal_abstract/stimuli/Sad/58.jpg'), ('Block3Corr', 'left')]), OrderedDict([('Block3Type', 'Fix2'), ('Block3Stim', '/Users/nmuncy/Projects/cal_abstract/stimuli/Soft/6.jpg'), ('Block3Corr', 'right')]), OrderedDict([('Block3Type', 'Fix1'), ('Block3Stim', '/Users/nmuncy/Projects/cal_abstract/stimuli/Sad/22.jpg'), ('Block3Corr', 'left')]), OrderedDict([('Block3Type', 'Fix1'), ('Block3Stim', '/Users/nmuncy/Projects/cal_abstract/stimuli/Sad/46.jpg'), ('Block3Corr', 'left')]), OrderedDict([('Block3Type', 'Cond'), ('Block3Stim', '/Users/nmuncy/Projects/cal_abstract/stimuli/Smell/55.jpg'), ('Block3Corr', 'right')]), OrderedDict([('Block3Type', 'Cond'), ('Block3Stim', '/Users/nmuncy/Projects/cal_abstract/stimuli/Smell/51.jpg'), ('Block3Corr', 'left')]), OrderedDict([('Block3Type', 'Fix2'), ('Block3Stim', '/Users/nmuncy/Projects/cal_abstract/stimuli/Soft/59.jpg'), ('Block3Corr', 'right')]), OrderedDict([('Block3Type', 'Cond'), ('Block3Stim', '/Users/nmuncy/Projects/cal_abstract/stimuli/Smell/11.jpg'), ('Block3Corr', 'left')]), OrderedDict([('Block3Type', 'Cond'), ('Block3Stim', '/Users/nmuncy/Projects/cal_abstract/stimuli/Smell/5.jpg'), ('Block3Corr', 'right')]), OrderedDict([('Block3Type', 'Cond'), ('Block3Stim', '/Users/nmuncy/Projects/cal_abstract/stimuli/Smell/47.jpg'), ('Block3Corr', 'left')]), OrderedDict([('Block3Type', 'Cond'), ('Block3Stim', '/Users/nmuncy/Projects/cal_abstract/stimuli/Smell/36.jpg'), ('Block3Corr', 'right')]), OrderedDict([('Block3Type', 'Fix2'), ('Block3Stim', '/Users/nmuncy/Projects/cal_abstract/stimuli/Soft/20.jpg'), ('Block3Corr', 'right')]), OrderedDict([('Block3Type', 'Cond'), ('Block3Stim', '/Users/nmuncy/Projects/cal_abstract/stimuli/Smell/8.jpg'), ('Block3Corr', 'left')]), OrderedDict([('Block3Type', 'Fix2'), ('Block3Stim', '/Users/nmuncy/Projects/cal_abstract/stimuli/Soft/18.jpg'), ('Block3Corr', 'right')]), OrderedDict([('Block3Type', 'Cond'), ('Block3Stim', '/Users/nmuncy/Projects/cal_abstract/stimuli/Smell/32.jpg'), ('Block3Corr', 'left')]), OrderedDict([('Block3Type', 'Fix2'), ('Block3Stim', '/Users/nmuncy/Projects/cal_abstract/stimuli/Soft/29.jpg'), ('Block3Corr', 'right')]), OrderedDict([('Block3Type', 'Fix1'), ('Block3Stim', '/Users/nmuncy/Projects/cal_abstract/stimuli/Sad/35.jpg'), ('Block3Corr', 'left')]), OrderedDict([('Block3Type', 'Fix1'), ('Block3Stim', '/Users/nmuncy/Projects/cal_abstract/stimuli/Sad/50.jpg'), ('Block3Corr', 'left')]), OrderedDict([('Block3Type', 'Cond'), ('Block3Stim', '/Users/nmuncy/Projects/cal_abstract/stimuli/Smell/17.jpg'), ('Block3Corr', 'right')]), OrderedDict([('Block3Type', 'Cond'), ('Block3Stim', '/Users/nmuncy/Projects/cal_abstract/stimuli/Smell/4.jpg'), ('Block3Corr', 'left')]), OrderedDict([('Block3Type', 'Fix1'), ('Block3Stim', '/Users/nmuncy/Projects/cal_abstract/stimuli/Sad/3.jpg'), ('Block3Corr', 'left')]), OrderedDict([('Block3Type', 'Cond'), ('Block3Stim', '/Users/nmuncy/Projects/cal_abstract/stimuli/Smell/50.jpg'), ('Block3Corr', 'right')]), OrderedDict([('Block3Type', 'Fix2'), ('Block3Stim', '/Users/nmuncy/Projects/cal_abstract/stimuli/Soft/0.jpg'), ('Block3Corr', 'right')]), OrderedDict([('Block3Type', 'Cond'), ('Block3Stim', '/Users/nmuncy/Projects/cal_abstract/stimuli/Smell/26.jpg'), ('Block3Corr', 'left')]), OrderedDict([('Block3Type', 'Fix2'), ('Block3Stim', '/Users/nmuncy/Projects/cal_abstract/stimuli/Soft/16.jpg'), ('Block3Corr', 'right')]), OrderedDict([('Block3Type', 'Fix2'), ('Block3Stim', '/Users/nmuncy/Projects/cal_abstract/stimuli/Soft/41.jpg'), ('Block3Corr', 'right')]), OrderedDict([('Block3Type', 'Fix2'), ('Block3Stim', '/Users/nmuncy/Projects/cal_abstract/stimuli/Soft/19.jpg'), ('Block3Corr', 'right')]), OrderedDict([('Block3Type', 'Cond'), ('Block3Stim', '/Users/nmuncy/Projects/cal_abstract/stimuli/Smell/1.jpg'), ('Block3Corr', 'left')]), OrderedDict([('Block3Type', 'Fix2'), ('Block3Stim', '/Users/nmuncy/Projects/cal_abstract/stimuli/Soft/1.jpg'), ('Block3Corr', 'right')]), OrderedDict([('Block3Type', 'Fix2'), ('Block3Stim', '/Users/nmuncy/Projects/cal_abstract/stimuli/Soft/37.jpg'), ('Block3Corr', 'right')]), OrderedDict([('Block3Type', 'Fix2'), ('Block3Stim', '/Users/nmuncy/Projects/cal_abstract/stimuli/Soft/51.jpg'), ('Block3Corr', 'right')]), OrderedDict([('Block3Type', 'Cond'), ('Block3Stim', '/Users/nmuncy/Projects/cal_abstract/stimuli/Smell/44.jpg'), ('Block3Corr', 'left')]), OrderedDict([('Block3Type', 'Fix1'), ('Block3Stim', '/Users/nmuncy/Projects/cal_abstract/stimuli/Sad/31.jpg'), ('Block3Corr', 'left')]), OrderedDict([('Block3Type', 'Fix2'), ('Block3Stim', '/Users/nmuncy/Projects/cal_abstract/stimuli/Soft/40.jpg'), ('Block3Corr', 'right')]), OrderedDict([('Block3Type', 'Cond'), ('Block3Stim', '/Users/nmuncy/Projects/cal_abstract/stimuli/Smell/45.jpg'), ('Block3Corr', 'left')]), OrderedDict([('Block3Type', 'Fix1'), ('Block3Stim', '/Users/nmuncy/Projects/cal_abstract/stimuli/Sad/40.jpg'), ('Block3Corr', 'left')])]" valType="str"/>
      <Param name="conditionsFile" updates="None" val="blocks/Block3.csv" valType="str"/>
      <Param name="endPoints" updates="None" val="[0, 1]" valType="num"/>
      <Param name="isTrials" updates="None" val="True" valType="bool"/>
      <Param name="loopType" updates="None" val="sequential" valType="str"/>
      <Param name="nReps" updates="None" val="1" valType="code"/>
      <Param name="name" updates="None" val="Block3_loop" valType="code"/>
      <Param name="random seed" updates="None" val="" valType="code"/>
    </LoopInitiator>
    <Routine name="Block3"/>
    <Routine name="Feedback3"/>
    <LoopTerminator name="Block3_loop"/>
    <Routine name="End"/>
  </Flow>
</PsychoPy2experiment>
